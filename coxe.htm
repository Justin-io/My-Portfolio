<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>J-CODE - Learn Java on Mobile</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Prism.js for syntax highlighting -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-java.min.js"></script>
    
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Custom Styles -->
    <style>
        /* Custom animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .fade-in {
            animation: fadeIn 0.5s ease forwards;
        }
        
        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 6px;
        }
        
        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 3px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
        
        /* Code block styling */
        pre[class*="language-"] {
            border-radius: 0.5rem;
            margin: 1rem 0;
            font-size: 0.875rem;
        }
        
        /* Dark mode toggle */
        .dark-mode {
            background-color: #1a202c;
            color: #e2e8f0;
        }
        
        .dark-mode .bg-white {
            background-color: #2d3748;
        }
        
        .dark-mode .text-gray-800 {
            color: #e2e8f0;
        }
        
        .dark-mode .text-gray-600 {
            color: #cbd5e0;
        }
        
        .dark-mode .border-gray-200 {
            border-color: #4a5568;
        }
        
        /* Mobile optimizations */
        @media (max-width: 640px) {
            .content-container {
                padding-bottom: 5rem;
            }
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800 font-sans">
    <!-- Header -->
    <header class="bg-indigo-600 text-white p-4 shadow-md sticky top-0 z-10">
        <div class="container mx-auto flex justify-between items-center">
            <div class="flex items-center space-x-2">
                <i class="fas fa-code text-2xl"></i>
                <h1 class="text-xl font-bold">J-CODE</h1>
            </div>
            <div class="flex items-center space-x-4">
                <span class="text-sm hidden sm:inline">Learn Java. Think Like a Coder.</span>
                <button id="darkModeToggle" class="p-2 rounded-full hover:bg-indigo-700">
                    <i class="fas fa-moon"></i>
                </button>
            </div>
        </div>
    </header>

    <!-- Live Class Notification Banner -->
    <div id="liveClassBanner" class="bg-yellow-500 text-black p-2 text-center hidden">
        <div class="container mx-auto flex justify-between items-center">
            <div class="flex items-center">
                <i class="fas fa-broadcast-tower mr-2"></i>
                <span>ðŸ“¢ Live class in progress! <a href="#" class="underline font-bold">Join now â†’</a></span>
            </div>
            <button id="closeBanner" class="text-black">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>

    <!-- Main Content -->
    <main class="container mx-auto p-4 content-container">
        <!-- Dashboard View -->
        <div id="dashboardView" class="fade-in">
            <div class="bg-white rounded-xl shadow-md p-6 mb-6">
                <h2 class="text-2xl font-bold mb-4 text-indigo-700">Your Learning Dashboard</h2>
                
                <div class="mb-6">
                    <div class="flex justify-between mb-2">
                        <span class="font-medium">Your Progress</span>
                        <span id="progressText">Day 1 of 10</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-4">
                        <div id="progressBar" class="bg-indigo-600 h-4 rounded-full" style="width: 10%"></div>
                    </div>
                </div>
                
                <div class="grid grid-cols-2 gap-4 mb-6">
                    <div class="bg-indigo-50 p-4 rounded-lg border border-indigo-100">
                        <h3 class="font-bold text-indigo-700 mb-2">Current Day</h3>
                        <p id="currentDay" class="text-xl font-bold">Day 1: Introduction to Java</p>
                    </div>
                    <div class="bg-green-50 p-4 rounded-lg border border-green-100">
                        <h3 class="font-bold text-green-700 mb-2">Next Step</h3>
                        <p id="nextStep" class="text-xl font-bold">Complete Day 1 Quiz</p>
                    </div>
                </div>
                
                <div class="mb-6">
                    <h3 class="font-bold mb-3">Quick Actions</h3>
                    <div class="grid grid-cols-2 sm:grid-cols-4 gap-3">
                        <button class="action-btn bg-indigo-100 hover:bg-indigo-200 text-indigo-700 p-3 rounded-lg flex flex-col items-center justify-center transition">
                            <i class="fas fa-book text-xl mb-1"></i>
                            <span>Notes</span>
                        </button>
                        <button class="action-btn bg-indigo-100 hover:bg-indigo-200 text-indigo-700 p-3 rounded-lg flex flex-col items-center justify-center transition">
                            <i class="fas fa-code text-xl mb-1"></i>
                            <span>Code</span>
                        </button>
                        <button class="action-btn bg-indigo-100 hover:bg-indigo-200 text-indigo-700 p-3 rounded-lg flex flex-col items-center justify-center transition">
                            <i class="fas fa-question-circle text-xl mb-1"></i>
                            <span>Quiz</span>
                        </button>
                        <button class="action-btn bg-indigo-100 hover:bg-indigo-200 text-indigo-700 p-3 rounded-lg flex flex-col items-center justify-center transition">
                            <i class="fab fa-github text-xl mb-1"></i>
                            <span>GitHub</span>
                        </button>
                    </div>
                </div>
                
                <div class="bg-yellow-50 border-l-4 border-yellow-500 p-4 mb-4">
                    <p class="text-yellow-700">
                        <i class="fas fa-exclamation-triangle mr-2"></i>
                        Your progress is saved only on this device. If you switch phones, you'll start over.
                    </p>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-md p-6">
                <h3 class="text-xl font-bold mb-4 text-indigo-700">Learning Modules</h3>
                <div class="space-y-3">
                    <!-- Days will be populated by JavaScript -->
                </div>
            </div>
        </div>

        <!-- Day Module View -->
        <div id="dayModuleView" class="hidden fade-in">
            <div class="bg-white rounded-xl shadow-md p-6 mb-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 id="dayTitle" class="text-2xl font-bold text-indigo-700">Day 1: Introduction to Java</h2>
                    <button id="backToDashboard" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-arrow-left mr-2"></i> Back to Dashboard
                    </button>
                </div>
                
                <div class="mb-6">
                    <div class="flex border-b">
                        <button class="tab-btn px-4 py-2 font-medium text-indigo-600 border-b-2 border-indigo-600" data-tab="notes">Notes</button>
                        <button class="tab-btn px-4 py-2 font-medium text-gray-500 hover:text-gray-700" data-tab="code">Code</button>
                        <button class="tab-btn px-4 py-2 font-medium text-gray-500 hover:text-gray-700" data-tab="tracing">Tracing</button>
                        <button class="tab-btn px-4 py-2 font-medium text-gray-500 hover:text-gray-700" data-tab="quiz">Quiz</button>
                    </div>
                </div>
                
                <!-- Tab Content -->
                <div id="tabContent">
                    <!-- Notes Tab -->
                    <div id="notesTab" class="tab-content">
                        <div class="prose max-w-none">
                            <h3 class="text-xl font-bold mb-3">Introduction to Java</h3>
                            <p class="mb-4">Java is a high-level, class-based, object-oriented programming language designed to have as few implementation dependencies as possible.</p>
                            
                            <h4 class="text-lg font-bold mb-2">Key Features of Java</h4>
                            <ul class="list-disc pl-6 mb-4">
                                <li>Platform Independence</li>
                                <li>Object-Oriented</li>
                                <li>Simple and Secure</li>
                                <li>Robust and Reliable</li>
                            </ul>
                            
                            <h4 class="text-lg font-bold mb-2">Java Development Kit (JDK)</h4>
                            <p class="mb-4">JDK is a software development environment used for developing Java applications. It includes JRE (Java Runtime Environment), an interpreter/loader, compiler, archiver, and documentation generator.</p>
                            
                            <div class="bg-blue-50 p-4 rounded-lg mb-4">
                                <p class="text-blue-800"><i class="fas fa-info-circle mr-2"></i> On mobile, you can use apps like AIDE or Dcoder to write and run Java code.</p>
                            </div>
                            
                            <div class="mt-6">
                                <a href="#" class="inline-flex items-center text-indigo-600 hover:text-indigo-800">
                                    <i class="fas fa-file-pdf mr-2"></i> Download Day 1 PDF Notes
                                </a>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Code Tab -->
                    <div id="codeTab" class="tab-content hidden">
                        <h3 class="text-xl font-bold mb-4">Code Examples</h3>
                        
                        <div class="mb-6">
                            <h4 class="text-lg font-bold mb-2">Hello World Program</h4>
                            <div class="relative">
                                <pre><code class="language-java">public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
    }
}</code></pre>
                                <button class="copy-btn absolute top-2 right-2 bg-gray-700 text-white p-2 rounded hover:bg-gray-600">
                                    <i class="fas fa-copy"></i>
                                </button>
                            </div>
                        </div>
                        
                        <div class="mb-6">
                            <h4 class="text-lg font-bold mb-2">Variables and Data Types</h4>
                            <div class="relative">
                                <pre><code class="language-java">public class Variables {
    public static void main(String[] args) {
        int number = 10;
        double decimal = 5.5;
        char letter = 'A';
        boolean flag = true;
        String text = "Hello Java";
        
        System.out.println("Number: " + number);
        System.out.println("Decimal: " + decimal);
        System.out.println("Letter: " + letter);
        System.out.println("Flag: " + flag);
        System.out.println("Text: " + text);
    }
}</code></pre>
                                <button class="copy-btn absolute top-2 right-2 bg-gray-700 text-white p-2 rounded hover:bg-gray-600">
                                    <i class="fas fa-copy"></i>
                                </button>
                            </div>
                        </div>
                        
                        <div class="bg-green-50 p-4 rounded-lg">
                            <p class="text-green-800"><i class="fas fa-lightbulb mr-2"></i> Copy these code snippets and try running them in your mobile coding app!</p>
                        </div>
                    </div>
                    
                    <!-- Tracing Tab -->
                    <div id="tracingTab" class="tab-content hidden">
                        <h3 class="text-xl font-bold mb-4">Code Tracing Exercises</h3>
                        
                        <div class="mb-6">
                            <h4 class="text-lg font-bold mb-2">Exercise 1: Fill in the Blank</h4>
                            <p class="mb-3">What is the value of <code>x</code> after the following code executes?</p>
                            
                            <div class="bg-gray-800 text-white p-4 rounded-lg mb-4">
                                <pre><code class="language-java">int x = 5;
x = x + 3;
x = x * 2;</code></pre>
                            </div>
                            
                            <div class="flex items-center">
                                <input type="text" id="tracingAnswer1" class="border border-gray-300 rounded p-2 mr-2 w-24" placeholder="Answer">
                                <button id="checkTracing1" class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">Check</button>
                                <span id="tracingResult1" class="ml-2"></span>
                            </div>
                        </div>
                        
                        <div class="mb-6">
                            <h4 class="text-lg font-bold mb-2">Exercise 2: Drag and Drop</h4>
                            <p class="mb-3">Arrange the code blocks in the correct order to create a valid Java program:</p>
                            
                            <div id="dragDropContainer" class="space-y-2 mb-4">
                                <!-- Draggable items will be added by JavaScript -->
                            </div>
                            
                            <button id="checkDragDrop" class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">Check Order</button>
                            <span id="dragDropResult" class="ml-2"></span>
                        </div>
                        
                        <div>
                            <h4 class="text-lg font-bold mb-2">Exercise 3: Multiple Choice</h4>
                            <p class="mb-3">Which of the following is NOT a valid Java data type?</p>
                            
                            <div class="space-y-2">
                                <label class="flex items-center">
                                    <input type="radio" name="mcq" value="a" class="mr-2">
                                    <span>A. int</span>
                                </label>
                                <label class="flex items-center">
                                    <input type="radio" name="mcq" value="b" class="mr-2">
                                    <span>B. float</span>
                                </label>
                                <label class="flex items-center">
                                    <input type="radio" name="mcq" value="c" class="mr-2">
                                    <span>C. string</span>
                                </label>
                                <label class="flex items-center">
                                    <input type="radio" name="mcq" value="d" class="mr-2">
                                    <span>D. boolean</span>
                                </label>
                            </div>
                            
                            <button id="checkMCQ" class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 mt-3">Check Answer</button>
                            <span id="mcqResult" class="ml-2"></span>
                        </div>
                    </div>
                    
                    <!-- Quiz Tab -->
                    <div id="quizTab" class="tab-content hidden">
                        <h3 class="text-xl font-bold mb-4">Day 1 Quiz</h3>
                        <p class="mb-4">Complete this 5-question quiz to unlock the next day.</p>
                        
                        <div id="quizContainer" class="space-y-6">
                            <!-- Quiz questions will be populated by JavaScript -->
                        </div>
                        
                        <div class="mt-6 flex justify-between">
                            <button id="resetQuiz" class="bg-gray-200 text-gray-700 px-4 py-2 rounded hover:bg-gray-300">Reset Quiz</button>
                            <button id="submitQuiz" class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">Submit Quiz</button>
                        </div>
                        
                        <div id="quizResult" class="mt-6 hidden">
                            <div class="bg-white border border-gray-200 rounded-lg p-4">
                                <h4 class="text-lg font-bold mb-2">Quiz Result</h4>
                                <p id="quizResultText"></p>
                                <div id="quizActions" class="mt-4">
                                    <!-- Actions will be added based on result -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Code Playground View -->
        <div id="playgroundView" class="hidden fade-in">
            <div class="bg-white rounded-xl shadow-md p-6 mb-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-2xl font-bold text-indigo-700">Code Playground</h2>
                    <button id="backToDashboardFromPlayground" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-arrow-left mr-2"></i> Back to Dashboard
                    </button>
                </div>
                
                <p class="mb-4">Practice your Java code here. Copy the templates and run them in your mobile coding app.</p>
                
                <div class="mb-6">
                    <h3 class="text-lg font-bold mb-3">Code Templates</h3>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 cursor-pointer template-card" data-template="hello">
                            <h4 class="font-bold mb-2">Hello World</h4>
                            <p class="text-sm text-gray-600">Basic Java program to print "Hello World"</p>
                        </div>
                        <div class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 cursor-pointer template-card" data-template="variables">
                            <h4 class="font-bold mb-2">Variables</h4>
                            <p class="text-sm text-gray-600">Example of different variable types</p>
                        </div>
                        <div class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 cursor-pointer template-card" data-template="conditions">
                            <h4 class="font-bold mb-2">Conditionals</h4>
                            <p class="text-sm text-gray-600">If-else statements example</p>
                        </div>
                        <div class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 cursor-pointer template-card" data-template="loops">
                            <h4 class="font-bold mb-2">Loops</h4>
                            <p class="text-sm text-gray-600">For and while loop examples</p>
                        </div>
                    </div>
                </div>
                
                <div id="codeTemplate" class="mb-6">
                    <h3 class="text-lg font-bold mb-2">Selected Template</h3>
                    <div class="relative">
                        <pre><code id="templateCode" class="language-java">Select a template to view the code</code></pre>
                        <button id="copyTemplate" class="copy-btn absolute top-2 right-2 bg-gray-700 text-white p-2 rounded hover:bg-gray-600">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                </div>
                
                <div class="bg-indigo-50 p-4 rounded-lg">
                    <p class="text-indigo-800"><i class="fas fa-info-circle mr-2"></i> Copy this code and paste it into your mobile coding app (AIDE/Dcoder) to run it!</p>
                </div>
            </div>
        </div>

        <!-- GitHub Guide View -->
        <div id="githubView" class="hidden fade-in">
            <div class="bg-white rounded-xl shadow-md p-6 mb-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-2xl font-bold text-indigo-700">GitHub Onboarding Guide</h2>
                    <button id="backToDashboardFromGithub" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-arrow-left mr-2"></i> Back to Dashboard
                    </button>
                </div>
                
                <div class="mb-6">
                    <div class="flex items-center mb-4">
                        <i class="fab fa-github text-3xl mr-3"></i>
                        <h3 class="text-xl font-bold">Learn GitHub in 6 Steps</h3>
                    </div>
                    
                    <div class="space-y-4">
                        <div class="border-l-4 border-indigo-500 pl-4 py-1">
                            <h4 class="font-bold">Step 1: What is GitHub?</h4>
                            <p class="text-gray-600">GitHub is a code hosting platform for version control and collaboration.</p>
                            <button class="text-indigo-600 hover:text-indigo-800 mt-1 text-sm">Learn more â†’</button>
                        </div>
                        
                        <div class="border-l-4 border-indigo-500 pl-4 py-1">
                            <h4 class="font-bold">Step 2: Create your account</h4>
                            <p class="text-gray-600">Sign up for a free GitHub account using your email.</p>
                            <a href="https://github.com/signup" target="_blank" class="text-indigo-600 hover:text-indigo-800 mt-1 text-sm inline-block">Sign up â†’</a>
                        </div>
                        
                        <div class="border-l-4 border-indigo-500 pl-4 py-1">
                            <h4 class="font-bold">Step 3: Create your first repo</h4>
                            <p class="text-gray-600">Create a new repository with the name format: <code>oopj-kju-s123</code> (replace s123 with your ID).</p>
                            <button class="text-indigo-600 hover:text-indigo-800 mt-1 text-sm">Show steps â†’</button>
                        </div>
                        
                        <div class="border-l-4 border-indigo-500 pl-4 py-1">
                            <h4 class="font-bold">Step 4: Upload your code</h4>
                            <p class="text-gray-600">Upload your Student Grade Tracker code to your repository.</p>
                            <button class="text-indigo-600 hover:text-indigo-800 mt-1 text-sm">Show how â†’</button>
                        </div>
                        
                        <div class="border-l-4 border-indigo-500 pl-4 py-1">
                            <h4 class="font-bold">Step 5: Add a README.md</h4>
                            <p class="text-gray-600">Create a README.md file to describe your project.</p>
                            <button class="text-indigo-600 hover:text-indigo-800 mt-1 text-sm">Get template â†’</button>
                        </div>
                        
                        <div class="border-l-4 border-indigo-500 pl-4 py-1">
                            <h4 class="font-bold">Step 6: Completion checklist</h4>
                            <p class="text-gray-600">Verify you've completed all the steps.</p>
                            <div class="mt-2 space-y-2">
                                <label class="flex items-center">
                                    <input type="checkbox" class="mr-2 github-checklist" data-step="1">
                                    <span>Created GitHub account</span>
                                </label>
                                <label class="flex items-center">
                                    <input type="checkbox" class="mr-2 github-checklist" data-step="2">
                                    <span>Created repository with correct name</span>
                                </label>
                                <label class="flex items-center">
                                    <input type="checkbox" class="mr-2 github-checklist" data-step="3">
                                    <span>Uploaded code files</span>
                                </label>
                                <label class="flex items-center">
                                    <input type="checkbox" class="mr-2 github-checklist" data-step="4">
                                    <span>Added README.md file</span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div id="githubRepoGenerator" class="bg-indigo-50 p-4 rounded-lg">
                    <h4 class="font-bold mb-2">Generate Your Custom GitHub Repo Link</h4>
                    <p class="text-sm mb-3">Enter your student ID to generate your personalized repository link:</p>
                    <div class="flex">
                        <input type="text" id="studentId" placeholder="e.g., s123" class="border border-gray-300 rounded-l p-2 flex-grow">
                        <button id="generateRepoLink" class="bg-indigo-600 text-white px-4 py-2 rounded-r hover:bg-indigo-700">Generate</button>
                    </div>
                    <div id="repoLinkResult" class="mt-3 hidden">
                        <p class="font-medium">Your repository link:</p>
                        <a id="repoLink" href="#" target="_blank" class="text-indigo-600 hover:text-indigo-800 break-all"></a>
                    </div>
                </div>
                
                <div id="githubCompletion" class="mt-6 hidden">
                    <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                        <div class="flex items-center">
                            <i class="fas fa-check-circle text-green-500 text-2xl mr-3"></i>
                            <div>
                                <h4 class="font-bold text-green-800">Congratulations!</h4>
                                <p class="text-green-700">You've completed the GitHub onboarding guide. You're now a GitHub coder!</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Resources View -->
        <div id="resourcesView" class="hidden fade-in">
            <div class="bg-white rounded-xl shadow-md p-6 mb-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-2xl font-bold text-indigo-700">Resources</h2>
                    <button id="backToDashboardFromResources" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-arrow-left mr-2"></i> Back to Dashboard
                    </button>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="border border-gray-200 rounded-lg p-4">
                        <h3 class="text-lg font-bold mb-3 flex items-center">
                            <i class="fas fa-file-pdf text-red-500 mr-2"></i> Daily PDF Notes
                        </h3>
                        <ul class="space-y-2">
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Day 1: Introduction to Java</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Day 2: Data Types and Variables</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Day 3: Operators and Expressions</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Day 4: Control Statements</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Day 5: Arrays</a></li>
                        </ul>
                    </div>
                    
                    <div class="border border-gray-200 rounded-lg p-4">
                        <h3 class="text-lg font-bold mb-3 flex items-center">
                            <i class="fas fa-mobile-alt text-blue-500 mr-2"></i> Mobile App Setup
                        </h3>
                        <ul class="space-y-2">
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Installing AIDE on Android</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Setting up Dcoder</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Running your first Java program</a></li>
                        </ul>
                    </div>
                    
                    <div class="border border-gray-200 rounded-lg p-4">
                        <h3 class="text-lg font-bold mb-3 flex items-center">
                            <i class="fas fa-exclamation-triangle text-yellow-500 mr-2"></i> Common Errors & Fixes
                        </h3>
                        <ul class="space-y-2">
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">"Class not found" error</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Syntax errors</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Logic errors</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Compilation errors</a></li>
                        </ul>
                    </div>
                    
                    <div class="border border-gray-200 rounded-lg p-4">
                        <h3 class="text-lg font-bold mb-3 flex items-center">
                            <i class="fas fa-book text-green-500 mr-2"></i> KTU Syllabus Mapping
                        </h3>
                        <ul class="space-y-2">
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Module 1: Basics of Java</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Module 2: Object-Oriented Programming</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Module 3: Exception Handling</a></li>
                            <li><a href="#" class="text-indigo-600 hover:text-indigo-800">Module 4: Collections</a></li>
                        </ul>
                    </div>
                    
                    <div class="border border-gray-200 rounded-lg p-4 md:col-span-2">
                        <h3 class="text-lg font-bold mb-3 flex items-center">
                            <i class="fas fa-brain text-purple-500 mr-2"></i> Mindset Tips
                        </h3>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div class="bg-purple-50 p-3 rounded-lg">
                                <h4 class="font-bold mb-1">Practice Daily</h4>
                                <p class="text-sm">Code every day, even if it's just for 15 minutes.</p>
                            </div>
                            <div class="bg-purple-50 p-3 rounded-lg">
                                <h4 class="font-bold mb-1">Break Problems Down</h4>
                                <p class="text-sm">Divide complex problems into smaller, manageable parts.</p>
                            </div>
                            <div class="bg-purple-50 p-3 rounded-lg">
                                <h4 class="font-bold mb-1">Learn from Mistakes</h4>
                                <p class="text-sm">Errors are opportunities to learn and improve.</p>
                            </div>
                            <div class="bg-purple-50 p-3 rounded-lg">
                                <h4 class="font-bold mb-1">Collaborate</h4>
                                <p class="text-sm">Discuss problems with peers and learn together.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Bottom Navigation -->
    <nav class="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 z-10">
        <div class="container mx-auto">
            <div class="grid grid-cols-5">
                <button class="nav-btn flex flex-col items-center justify-center p-3 text-indigo-600" data-view="dashboard">
                    <i class="fas fa-home text-xl mb-1"></i>
                    <span class="text-xs">Home</span>
                </button>
                <button class="nav-btn flex flex-col items-center justify-center p-3 text-gray-500 hover:text-indigo-600" data-view="day">
                    <i class="fas fa-book-open text-xl mb-1"></i>
                    <span class="text-xs">Learn</span>
                </button>
                <button class="nav-btn flex flex-col items-center justify-center p-3 text-gray-500 hover:text-indigo-600" data-view="playground">
                    <i class="fas fa-laptop-code text-xl mb-1"></i>
                    <span class="text-xs">Code</span>
                </button>
                <button class="nav-btn flex flex-col items-center justify-center p-3 text-gray-500 hover:text-indigo-600" data-view="github">
                    <i class="fab fa-github text-xl mb-1"></i>
                    <span class="text-xs">GitHub</span>
                </button>
                <button class="nav-btn flex flex-col items-center justify-center p-3 text-gray-500 hover:text-indigo-600" data-view="resources">
                    <i class="fas fa-folder text-xl mb-1"></i>
                    <span class="text-xs">Resources</span>
                </button>
            </div>
        </div>
    </nav>

    <!-- JavaScript -->
    <script>
        // App State
        const app = {
            currentView: 'dashboard',
            currentDay: 1,
            completedDays: [],
            quizResults: {},
            notes: {},
            isLiveClassHappening: true, // Toggle this to show/hide live class banner
            darkMode: false
        };

        // Days data
        const days = [
            { id: 1, title: "Introduction to Java", description: "Learn the basics of Java programming" },
            { id: 2, title: "Data Types and Variables", description: "Understanding different data types in Java" },
            { id: 3, title: "Operators and Expressions", description: "Working with operators in Java" },
            { id: 4, title: "Control Statements", description: "Conditional and loop statements" },
            { id: 5, title: "Arrays", description: "Working with arrays in Java" },
            { id: 6, title: "String Handling", description: "String manipulation in Java" },
            { id: 7, title: "Classes and Objects", description: "Introduction to OOP concepts" },
            { id: 8, title: "Inheritance", description: "Understanding inheritance in Java" },
            { id: 9, title: "Exception Handling", description: "Handling errors in Java" },
            { id: 10, title: "Collections Framework", description: "Working with Java collections" }
        ];

        // Quiz questions for Day 1
        const day1Quiz = [
            {
                question: "What is Java?",
                options: [
                    "A programming language",
                    "A coffee brand",
                    "An island in Indonesia",
                    "A type of computer hardware"
                ],
                correctAnswer: 0
            },
            {
                question: "Which of the following is NOT a Java feature?",
                options: [
                    "Platform Independence",
                    "Object-Oriented",
                    "Automatic Memory Management",
                    "Multiple Inheritance"
                ],
                correctAnswer: 3
            },
            {
                question: "What is the correct way to declare a variable in Java?",
                options: [
                    "variable x = 5;",
                    "int x = 5;",
                    "x = 5 int;",
                    "int x := 5;"
                ],
                correctAnswer: 1
            },
            {
                question: "Which method is the entry point of a Java program?",
                options: [
                    "public void main(String[] args)",
                    "public static void main(String[] args)",
                    "public static main(String[] args)",
                    "static void main(String[] args)"
                ],
                correctAnswer: 1
            },
            {
                question: "What is the output of System.out.println(10 + 20 + \"J-CODE\");?",
                options: [
                    "30J-CODE",
                    "1020J-CODE",
                    "J-CODE30",
                    "Error"
                ],
                correctAnswer: 0
            }
        ];

        // Code templates
        const codeTemplates = {
            hello: `public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
    }
}`,
            variables: `public class Variables {
    public static void main(String[] args) {
        int number = 10;
        double decimal = 5.5;
        char letter = 'A';
        boolean flag = true;
        String text = "Hello Java";
        
        System.out.println("Number: " + number);
        System.out.println("Decimal: " + decimal);
        System.out.println("Letter: " + letter);
        System.out.println("Flag: " + flag);
        System.out.println("Text: " + text);
    }
}`,
            conditions: `public class Conditions {
    public static void main(String[] args) {
        int age = 18;
        
        if (age >= 18) {
            System.out.println("You are eligible to vote.");
        } else {
            System.out.println("You are not eligible to vote.");
        }
        
        // Ternary operator
        String result = (age >= 18) ? "Eligible" : "Not Eligible";
        System.out.println("Result: " + result);
    }
}`,
            loops: `public class Loops {
    public static void main(String[] args) {
        // For loop
        System.out.println("For Loop:");
        for (int i = 1; i <= 5; i++) {
            System.out.println("Count: " + i);
        }
        
        // While loop
        System.out.println("\\nWhile Loop:");
        int count = 1;
        while (count <= 5) {
            System.out.println("Count: " + count);
            count++;
        }
        
        // Do-while loop
        System.out.println("\\nDo-While Loop:");
        int num = 1;
        do {
            System.out.println("Number: " + num);
            num++;
        } while (num <= 5);
    }
}`
        };

        // Drag and drop items
        const dragDropItems = [
            { id: 1, text: "public class HelloWorld {", order: 1 },
            { id: 2, text: "public static void main(String[] args) {", order: 2 },
            { id: 3, text: "System.out.println(\"Hello, World!\");", order: 3 },
            { id: 4, text: "}", order: 4 },
            { id: 5, text: "}", order: 5 }
        ];

        // Initialize app
        document.addEventListener('DOMContentLoaded', function() {
            loadAppState();
            renderDashboard();
            setupEventListeners();
            checkLiveClass();
            initializeDragDrop();
            renderQuiz();
        });

        // Load app state from localStorage
        function loadAppState() {
            const savedState = localStorage.getItem('jcodeAppState');
            if (savedState) {
                const parsed = JSON.parse(savedState);
                app.currentDay = parsed.currentDay || 1;
                app.completedDays = parsed.completedDays || [];
                app.quizResults = parsed.quizResults || {};
                app.notes = parsed.notes || {};
                app.darkMode = parsed.darkMode || false;
                
                if (app.darkMode) {
                    document.body.classList.add('dark-mode');
                    document.querySelector('#darkModeToggle i').classList.replace('fa-moon', 'fa-sun');
                }
            }
        }

        // Save app state to localStorage
        function saveAppState() {
            localStorage.setItem('jcodeAppState', JSON.stringify({
                currentDay: app.currentDay,
                completedDays: app.completedDays,
                quizResults: app.quizResults,
                notes: app.notes,
                darkMode: app.darkMode
            }));
        }

        // Check if live class is happening
        function checkLiveClass() {
            const banner = document.getElementById('liveClassBanner');
            if (app.isLiveClassHappening) {
                banner.classList.remove('hidden');
            } else {
                banner.classList.add('hidden');
            }
        }

        // Setup event listeners
        function setupEventListeners() {
            // Navigation buttons
            document.querySelectorAll('.nav-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const view = this.getAttribute('data-view');
                    navigateToView(view);
                });
            });

            // Back to dashboard buttons
            document.getElementById('backToDashboard').addEventListener('click', () => navigateToView('dashboard'));
            document.getElementById('backToDashboardFromPlayground').addEventListener('click', () => navigateToView('dashboard'));
            document.getElementById('backToDashboardFromGithub').addEventListener('click', () => navigateToView('dashboard'));
            document.getElementById('backToDashboardFromResources').addEventListener('click', () => navigateToView('dashboard'));

            // Dark mode toggle
            document.getElementById('darkModeToggle').addEventListener('click', toggleDarkMode);

            // Close live class banner
            document.getElementById('closeBanner').addEventListener('click', function() {
                document.getElementById('liveClassBanner').classList.add('hidden');
            });

            // Action buttons on dashboard
            document.querySelectorAll('.action-btn').forEach((btn, index) => {
                btn.addEventListener('click', function() {
                    const actions = ['notes', 'code', 'tracing', 'quiz'];
                    navigateToDayModule(app.currentDay, actions[index]);
                });
            });

            // Day module tabs
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const tab = this.getAttribute('data-tab');
                    switchTab(tab);
                });
            });

            // Copy buttons
            document.querySelectorAll('.copy-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const codeBlock = this.parentElement.querySelector('code');
                    const textArea = document.createElement('textarea');
                    textArea.value = codeBlock.textContent;
                    document.body.appendChild(textArea);
                    textArea.select();
                    document.execCommand('copy');
                    document.body.removeChild(textArea);
                    
                    // Show feedback
                    const originalHTML = this.innerHTML;
                    this.innerHTML = '<i class="fas fa-check"></i>';
                    setTimeout(() => {
                        this.innerHTML = originalHTML;
                    }, 2000);
                });
            });

            // Tracing exercises
            document.getElementById('checkTracing1').addEventListener('click', checkTracing1);
            document.getElementById('checkDragDrop').addEventListener('click', checkDragDrop);
            document.getElementById('checkMCQ').addEventListener('click', checkMCQ);

            // Quiz
            document.getElementById('submitQuiz').addEventListener('click', submitQuiz);
            document.getElementById('resetQuiz').addEventListener('click', resetQuiz);

            // Code playground
            document.querySelectorAll('.template-card').forEach(card => {
                card.addEventListener('click', function() {
                    const template = this.getAttribute('data-template');
                    showCodeTemplate(template);
                });
            });

            document.getElementById('copyTemplate').addEventListener('click', function() {
                const code = document.getElementById('templateCode').textContent;
                const textArea = document.createElement('textarea');
                textArea.value = code;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                
                // Show feedback
                const originalHTML = this.innerHTML;
                this.innerHTML = '<i class="fas fa-check"></i>';
                setTimeout(() => {
                    this.innerHTML = originalHTML;
                }, 2000);
            });

            // GitHub guide
            document.getElementById('generateRepoLink').addEventListener('click', generateRepoLink);
            
            document.querySelectorAll('.github-checklist').forEach(checkbox => {
                checkbox.addEventListener('change', checkGithubCompletion);
            });
        }

        // Navigate to view
        function navigateToView(view) {
            // Hide all views
            document.getElementById('dashboardView').classList.add('hidden');
            document.getElementById('dayModuleView').classList.add('hidden');
            document.getElementById('playgroundView').classList.add('hidden');
            document.getElementById('githubView').classList.add('hidden');
            document.getElementById('resourcesView').classList.add('hidden');

            // Update nav buttons
            document.querySelectorAll('.nav-btn').forEach(btn => {
                if (btn.getAttribute('data-view') === view) {
                    btn.classList.add('text-indigo-600');
                    btn.classList.remove('text-gray-500');
                } else {
                    btn.classList.remove('text-indigo-600');
                    btn.classList.add('text-gray-500');
                }
            });

            // Show selected view
            switch(view) {
                case 'dashboard':
                    document.getElementById('dashboardView').classList.remove('hidden');
                    renderDashboard();
                    break;
                case 'day':
                    navigateToDayModule(app.currentDay, 'notes');
                    break;
                case 'playground':
                    document.getElementById('playgroundView').classList.remove('hidden');
                    break;
                case 'github':
                    document.getElementById('githubView').classList.remove('hidden');
                    break;
                case 'resources':
                    document.getElementById('resourcesView').classList.remove('hidden');
                    break;
            }

            app.currentView = view;
        }

        // Navigate to day module
        function navigateToDayModule(dayId, tab = 'notes') {
            app.currentDay = dayId;
            document.getElementById('dashboardView').classList.add('hidden');
            document.getElementById('dayModuleView').classList.remove('hidden');
            
            // Update day title
            const day = days.find(d => d.id === dayId);
            document.getElementById('dayTitle').textContent = `Day ${day.id}: ${day.title}`;
            
            // Switch to specified tab
            switchTab(tab);
            
            // Update nav buttons
            document.querySelectorAll('.nav-btn').forEach(btn => {
                if (btn.getAttribute('data-view') === 'day') {
                    btn.classList.add('text-indigo-600');
                    btn.classList.remove('text-gray-500');
                } else {
                    btn.classList.remove('text-indigo-600');
                    btn.classList.add('text-gray-500');
                }
            });
            
            app.currentView = 'day';
        }

        // Switch tab in day module
        function switchTab(tab) {
            // Update tab buttons
            document.querySelectorAll('.tab-btn').forEach(btn => {
                if (btn.getAttribute('data-tab') === tab) {
                    btn.classList.add('text-indigo-600', 'border-b-2', 'border-indigo-600');
                    btn.classList.remove('text-gray-500');
                } else {
                    btn.classList.remove('text-indigo-600', 'border-b-2', 'border-indigo-600');
                    btn.classList.add('text-gray-500');
                }
            });

            // Show tab content
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.add('hidden');
            });
            
            document.getElementById(`${tab}Tab`).classList.remove('hidden');
        }

        // Render dashboard
        function renderDashboard() {
            // Update progress
            const progressPercent = (app.completedDays.length / 10) * 100;
            document.getElementById('progressBar').style.width = `${progressPercent}%`;
            document.getElementById('progressText').textContent = `Day ${app.completedDays.length + 1} of 10`;
            
            // Update current day
            const currentDay = days.find(d => d.id === app.currentDay);
            document.getElementById('currentDay').textContent = `Day ${app.currentDay}: ${currentDay.title}`;
            
            // Update next step
            if (app.completedDays.includes(app.currentDay)) {
                document.getElementById('nextStep').textContent = 'Move to next day';
            } else {
                document.getElementById('nextStep').textContent = 'Complete Day ' + app.currentDay + ' Quiz';
            }
            
            // Render days list
            const daysContainer = document.querySelector('#dashboardView .space-y-3');
            daysContainer.innerHTML = '';
            
            days.forEach(day => {
                const isCompleted = app.completedDays.includes(day.id);
                const isCurrent = day.id === app.currentDay;
                
                const dayElement = document.createElement('div');
                dayElement.className = `flex items-center justify-between p-3 rounded-lg border ${
                    isCompleted ? 'bg-green-50 border-green-200' : 
                    isCurrent ? 'bg-indigo-50 border-indigo-200' : 
                    'bg-white border-gray-200'
                }`;
                
                dayElement.innerHTML = `
                    <div class="flex items-center">
                        <div class="w-8 h-8 rounded-full flex items-center justify-center mr-3 ${
                            isCompleted ? 'bg-green-500 text-white' : 
                            isCurrent ? 'bg-indigo-500 text-white' : 
                            'bg-gray-200 text-gray-700'
                        }">
                            ${isCompleted ? '<i class="fas fa-check"></i>' : day.id}
                        </div>
                        <div>
                            <h4 class="font-medium">Day ${day.id}: ${day.title}</h4>
                            <p class="text-sm text-gray-600">${day.description}</p>
                        </div>
                    </div>
                    <button class="view-day-btn text-indigo-600 hover:text-indigo-800" data-day="${day.id}">
                        ${isCompleted ? 'Review' : isCurrent ? 'Continue' : 'Start'}
                    </button>
                `;
                
                daysContainer.appendChild(dayElement);
            });
            
            // Add event listeners to day buttons
            document.querySelectorAll('.view-day-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const dayId = parseInt(this.getAttribute('data-day'));
                    navigateToDayModule(dayId);
                });
            });
        }

        // Toggle dark mode
        function toggleDarkMode() {
            app.darkMode = !app.darkMode;
            document.body.classList.toggle('dark-mode');
            
            const icon = document.querySelector('#darkModeToggle i');
            if (app.darkMode) {
                icon.classList.replace('fa-moon', 'fa-sun');
            } else {
                icon.classList.replace('fa-sun', 'fa-moon');
            }
            
            saveAppState();
        }

        // Initialize drag and drop
        function initializeDragDrop() {
            const container = document.getElementById('dragDropContainer');
            
            // Shuffle items for drag and drop
            const shuffled = [...dragDropItems].sort(() => Math.random() - 0.5);
            
            shuffled.forEach(item => {
                const div = document.createElement('div');
                div.className = 'bg-gray-100 p-3 rounded border border-gray-300 cursor-move';
                div.draggable = true;
                div.dataset.id = item.id;
                div.textContent = item.text;
                container.appendChild(div);
            });
            
            // Add drag and drop event listeners
            let draggedElement = null;
            
            container.addEventListener('dragstart', function(e) {
                if (e.target.classList.contains('cursor-move')) {
                    draggedElement = e.target;
                    e.target.style.opacity = '0.5';
                }
            });
            
            container.addEventListener('dragend', function(e) {
                if (e.target.classList.contains('cursor-move')) {
                    e.target.style.opacity = '';
                }
            });
            
            container.addEventListener('dragover', function(e) {
                e.preventDefault();
                const afterElement = getDragAfterElement(container, e.clientY);
                if (afterElement == null) {
                    container.appendChild(draggedElement);
                } else {
                    container.insertBefore(draggedElement, afterElement);
                }
            });
        }

        // Get element after drag position
        function getDragAfterElement(container, y) {
            const draggableElements = [...container.querySelectorAll('.cursor-move:not(.dragging)')];
            
            return draggableElements.reduce((closest, child) => {
                const box = child.getBoundingClientRect();
                const offset = y - box.top - box.height / 2;
                
                if (offset < 0 && offset > closest.offset) {
                    return { offset: offset, element: child };
                } else {
                    return closest;
                }
            }, { offset: Number.NEGATIVE_INFINITY }).element;
        }

        // Check tracing exercise 1
        function checkTracing1() {
            const answer = document.getElementById('tracingAnswer1').value.trim();
            const result = document.getElementById('tracingResult1');
            
            if (answer === '16') {
                result.innerHTML = '<i class="fas fa-check-circle text-green-500"></i> Correct!';
            } else {
                result.innerHTML = '<i class="fas fa-times-circle text-red-500"></i> Try again';
            }
        }

        // Check drag and drop exercise
        function checkDragDrop() {
            const items = document.querySelectorAll('#dragDropContainer .cursor-move');
            const result = document.getElementById('dragDropResult');
            let correct = true;
            
            items.forEach((item, index) => {
                const id = parseInt(item.dataset.id);
                const expectedOrder = dragDropItems.find(d => d.id === id).order;
                
                if (expectedOrder !== index + 1) {
                    correct = false;
                }
            });
            
            if (correct) {
                result.innerHTML = '<i class="fas fa-check-circle text-green-500"></i> Correct order!';
            } else {
                result.innerHTML = '<i class="fas fa-times-circle text-red-500"></i> Incorrect order. Try again.';
            }
        }

        // Check MCQ exercise
        function checkMCQ() {
            const selected = document.querySelector('input[name="mcq"]:checked');
            const result = document.getElementById('mcqResult');
            
            if (!selected) {
                result.innerHTML = '<i class="fas fa-exclamation-circle text-yellow-500"></i> Please select an answer';
                return;
            }
            
            if (selected.value === 'c') {
                result.innerHTML = '<i class="fas fa-check-circle text-green-500"></i> Correct! string is not a valid Java data type (it should be String with capital S).';
            } else {
                result.innerHTML = '<i class="fas fa-times-circle text-red-500"></i> Incorrect. Try again.';
            }
        }

        // Render quiz
        function renderQuiz() {
            const container = document.getElementById('quizContainer');
            container.innerHTML = '';
            
            day1Quiz.forEach((q, index) => {
                const questionDiv = document.createElement('div');
                questionDiv.className = 'mb-6';
                questionDiv.innerHTML = `
                    <h4 class="font-bold mb-2">Question ${index + 1}: ${q.question}</h4>
                    <div class="space-y-2">
                        ${q.options.map((option, i) => `
                            <label class="flex items-center">
                                <input type="radio" name="q${index}" value="${i}" class="mr-2">
                                <span>${option}</span>
                            </label>
                        `).join('')}
                    </div>
                `;
                container.appendChild(questionDiv);
            });
        }

        // Submit quiz
        function submitQuiz() {
            let score = 0;
            const totalQuestions = day1Quiz.length;
            
            day1Quiz.forEach((q, index) => {
                const selected = document.querySelector(`input[name="q${index}"]:checked`);
                if (selected && parseInt(selected.value) === q.correctAnswer) {
                    score++;
                }
            });
            
            const percentage = Math.round((score / totalQuestions) * 100);
            const resultDiv = document.getElementById('quizResult');
            const resultText = document.getElementById('quizResultText');
            const actionsDiv = document.getElementById('quizActions');
            
            resultDiv.classList.remove('hidden');
            resultText.innerHTML = `You scored ${score} out of ${totalQuestions} (${percentage}%)`;
            
            actionsDiv.innerHTML = '';
            
            if (percentage >= 60) {
                // Pass
                resultText.innerHTML += ' <i class="fas fa-check-circle text-green-500"></i>';
                
                // Mark day as completed
                if (!app.completedDays.includes(app.currentDay)) {
                    app.completedDays.push(app.currentDay);
                    saveAppState();
                }
                
                // Show next day button
                if (app.currentDay < 10) {
                    const nextBtn = document.createElement('button');
                    nextBtn.className = 'bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 mr-2';
                    nextBtn.textContent = 'Go to Next Day';
                    nextBtn.addEventListener('click', () => {
                        app.currentDay++;
                        navigateToDayModule(app.currentDay);
                    });
                    actionsDiv.appendChild(nextBtn);
                }
                
                // Show review button
                const reviewBtn = document.createElement('button');
                reviewBtn.className = 'bg-gray-200 text-gray-700 px-4 py-2 rounded hover:bg-gray-300';
                reviewBtn.textContent = 'Review Answers';
                reviewBtn.addEventListener('click', () => {
                    // Highlight correct answers
                    day1Quiz.forEach((q, index) => {
                        const options = document.querySelectorAll(`input[name="q${index}"]`);
                        options.forEach((option, i) => {
                            const label = option.parentElement;
                            if (i === q.correctAnswer) {
                                label.classList.add('text-green-600', 'font-bold');
                            } else if (option.checked && i !== q.correctAnswer) {
                                label.classList.add('text-red-600');
                            }
                        });
                    });
                });
                actionsDiv.appendChild(reviewBtn);
            } else {
                // Fail
                resultText.innerHTML += ' <i class="fas fa-times-circle text-red-500"></i>';
                
                // Show retry button
                const retryBtn = document.createElement('button');
                retryBtn.className = 'bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700';
                retryBtn.textContent = 'Try Again';
                retryBtn.addEventListener('click', resetQuiz);
                actionsDiv.appendChild(retryBtn);
            }
            
            // Save quiz result
            app.quizResults[app.currentDay] = {
                score: score,
                total: totalQuestions,
                percentage: percentage,
                timestamp: new Date().toISOString()
            };
            saveAppState();
        }

        // Reset quiz
        function resetQuiz() {
            document.querySelectorAll('#quizContainer input[type="radio"]').forEach(radio => {
                radio.checked = false;
            });
            
            document.getElementById('quizResult').classList.add('hidden');
            
            // Remove any styling from previous answers
            document.querySelectorAll('#quizContainer label').forEach(label => {
                label.classList.remove('text-green-600', 'font-bold', 'text-red-600');
            });
        }

        // Show code template
        function showCodeTemplate(template) {
            const code = codeTemplates[template];
            document.getElementById('templateCode').textContent = code;
            
            // Re-highlight syntax
            Prism.highlightElement(document.getElementById('templateCode'));
            
            // Update selected card
            document.querySelectorAll('.template-card').forEach(card => {
                if (card.getAttribute('data-template') === template) {
                    card.classList.add('border-indigo-500', 'bg-indigo-50');
                } else {
                    card.classList.remove('border-indigo-500', 'bg-indigo-50');
                }
            });
        }

        // Generate repo link
        function generateRepoLink() {
            const studentId = document.getElementById('studentId').value.trim();
            if (!studentId) {
                alert('Please enter your student ID');
                return;
            }
            
            const repoLink = `https://github.com/yourusername/oopj-kju-${studentId}`;
            document.getElementById('repoLink').href = repoLink;
            document.getElementById('repoLink').textContent = repoLink;
            document.getElementById('repoLinkResult').classList.remove('hidden');
        }

        // Check GitHub completion
        function checkGithubCompletion() {
            const checkboxes = document.querySelectorAll('.github-checklist');
            const allChecked = Array.from(checkboxes).every(cb => cb.checked);
            
            if (allChecked) {
                document.getElementById('githubCompletion').classList.remove('hidden');
            } else {
                document.getElementById('githubCompletion').classList.add('hidden');
            }
        }
    </script>
</body>
</html>