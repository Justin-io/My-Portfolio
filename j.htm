<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>J-Random Password Generator - Secure & Beautiful</title>
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>üîê</text></svg>">
    
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --primary-color: #4664f0;
            --secondary-color: #64b4ff;
            --accent-color: #c86464;
            --success-color: #50b450;
            --warning-color: #e6aa50;
            --bg-dark: #08080c;
            --bg-medium: rgba(20, 20, 30, 0.7);
            --bg-light: rgba(40, 40, 60, 0.5);
            --text-primary: #e8e8ff;
            --text-secondary: #c8c8e0;
            --border-color: rgba(100, 180, 255, 0.3);
            --glass-bg: rgba(8, 8, 12, 0.7);
            --glass-border: rgba(100, 180, 255, 0.2);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--bg-dark);
            color: var(--text-primary);
            overflow-x: hidden;
            position: relative;
        }

        /* Three.js Canvas Background */
        #bg-canvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        /* Glass Morphism Container */
        .glass-container {
            background: var(--glass-bg);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 20px;
            border: 1px solid var(--glass-border);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }

        /* Navigation */
        nav {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            padding: 15px 30px;
            z-index: 1000;
            transition: all 0.3s ease;
        }

        nav.scrolled {
            background: var(--glass-bg);
            backdrop-filter: blur(15px);
            -webkit-backdrop-filter: blur(15px);
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-primary);
        }

        .logo i {
            color: var(--primary-color);
        }

        .nav-links {
            display: flex;
            gap: 30px;
            list-style: none;
        }

        .nav-links a {
            color: var(--text-secondary);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .nav-links a:hover {
            color: var(--primary-color);
        }

        .menu-toggle {
            display: none;
            background: none;
            border: none;
            color: var(--text-primary);
            font-size: 1.5rem;
            cursor: pointer;
        }

        /* Hero Section */
        .hero {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 80px 20px;
            position: relative;
        }

        .hero-content {
            max-width: 1200px;
            width: 100%;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 50px;
            align-items: center;
        }

        .hero-text h1 {
            font-size: 3.5rem;
            font-weight: 700;
            margin-bottom: 20px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .hero-text p {
            font-size: 1.2rem;
            color: var(--text-secondary);
            margin-bottom: 30px;
            line-height: 1.6;
        }

        .cta-buttons {
            display: flex;
            gap: 20px;
        }

        .btn {
            padding: 15px 30px;
            border-radius: 12px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 1rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(70, 100, 240, 0.3);
        }

        .btn-secondary {
            background: var(--glass-bg);
            color: var(--text-primary);
            border: 1px solid var(--glass-border);
        }

        .btn-secondary:hover {
            background: var(--bg-light);
            transform: translateY(-3px);
        }

        .hero-visual {
            position: relative;
            height: 500px;
        }

        .password-generator {
            padding: 30px;
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .password-display {
            background: var(--bg-medium);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .password-text {
            font-family: 'Courier New', monospace;
            font-size: 1.2rem;
            word-break: break-all;
            flex-grow: 1;
        }

        .copy-btn {
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 10px 15px;
            cursor: pointer;
            margin-left: 15px;
            transition: all 0.3s ease;
        }

        .copy-btn:hover {
            background: var(--secondary-color);
        }

        .password-options {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-bottom: 20px;
        }

        .option {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .option input[type="checkbox"] {
            width: 20px;
            height: 20px;
            accent-color: var(--primary-color);
        }

        .option label {
            font-weight: 500;
        }

        .slider-container {
            margin-bottom: 20px;
        }

        .slider-label {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .slider {
            width: 100%;
            height: 8px;
            border-radius: 5px;
            background: var(--bg-light);
            outline: none;
            -webkit-appearance: none;
        }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: var(--primary-color);
            cursor: pointer;
        }

        .slider::-moz-range-thumb {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: var(--primary-color);
            cursor: pointer;
            border: none;
        }

        .strength-indicator {
            margin-bottom: 20px;
        }

        .strength-bar {
            height: 10px;
            border-radius: 5px;
            background: var(--bg-light);
            overflow: hidden;
            margin-top: 10px;
        }

        .strength-fill {
            height: 100%;
            width: 0%;
            transition: all 0.3s ease;
        }

        .strength-weak {
            background: var(--accent-color);
            width: 33%;
        }

        .strength-medium {
            background: var(--warning-color);
            width: 66%;
        }

        .strength-strong {
            background: var(--success-color);
            width: 100%;
        }

        .generate-btn {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            border: none;
            border-radius: 12px;
            padding: 15px;
            font-weight: 600;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .generate-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(70, 100, 240, 0.3);
        }

        /* Features Section */
        .features {
            padding: 100px 20px;
            position: relative;
        }

        .section-header {
            text-align: center;
            margin-bottom: 60px;
        }

        .section-header h2 {
            font-size: 2.5rem;
            margin-bottom: 20px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .section-header p {
            font-size: 1.2rem;
            color: var(--text-secondary);
            max-width: 700px;
            margin: 0 auto;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .feature-card {
            padding: 30px;
            text-align: center;
            transition: transform 0.3s ease;
        }

        .feature-card:hover {
            transform: translateY(-10px);
        }

        .feature-icon {
            font-size: 3rem;
            color: var(--primary-color);
            margin-bottom: 20px;
        }

        .feature-card h3 {
            font-size: 1.5rem;
            margin-bottom: 15px;
        }

        .feature-card p {
            color: var(--text-secondary);
            line-height: 1.6;
        }

        /* Download Section */
        .download {
            padding: 100px 20px;
            text-align: center;
        }

        .download-container {
            max-width: 800px;
            margin: 0 auto;
        }

        .download-options {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-top: 40px;
            flex-wrap: wrap;
        }

        .download-card {
            padding: 30px;
            width: 300px;
            text-align: center;
        }

        .download-card h3 {
            margin-bottom: 15px;
            font-size: 1.3rem;
        }

        .download-card p {
            color: var(--text-secondary);
            margin-bottom: 20px;
        }

        /* Documentation Section */
        .documentation {
            padding: 100px 20px;
        }

        .doc-container {
            max-width: 1000px;
            margin: 0 auto;
        }

        .doc-tabs {
            display: flex;
            justify-content: center;
            margin-bottom: 40px;
            border-bottom: 1px solid var(--glass-border);
        }

        .doc-tab {
            padding: 15px 30px;
            background: none;
            border: none;
            color: var(--text-secondary);
            font-weight: 500;
            cursor: pointer;
            position: relative;
            transition: color 0.3s ease;
        }

        .doc-tab.active {
            color: var(--primary-color);
        }

        .doc-tab.active::after {
            content: '';
            position: absolute;
            bottom: -1px;
            left: 0;
            width: 100%;
            height: 2px;
            background: var(--primary-color);
        }

        .doc-content {
            display: none;
        }

        .doc-content.active {
            display: block;
        }

        .doc-section {
            margin-bottom: 30px;
        }

        .doc-section h3 {
            font-size: 1.5rem;
            margin-bottom: 15px;
            color: var(--primary-color);
        }

        .doc-section p {
            color: var(--text-secondary);
            line-height: 1.6;
            margin-bottom: 15px;
        }

        .doc-section ul {
            padding-left: 20px;
            margin-bottom: 15px;
        }

        .doc-section li {
            color: var(--text-secondary);
            margin-bottom: 10px;
        }

        .code-block {
            background: var(--bg-medium);
            border-radius: 10px;
            padding: 20px;
            overflow-x: auto;
            margin: 20px 0;
        }

        .code-block pre {
            color: var(--text-secondary);
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
            line-height: 1.5;
        }

        /* Footer */
        footer {
            padding: 50px 20px 30px;
            text-align: center;
        }

        .footer-content {
            max-width: 1200px;
            margin: 0 auto;
        }

        .social-links {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 30px;
        }

        .social-links a {
            color: var(--text-secondary);
            font-size: 1.5rem;
            transition: color 0.3s ease;
        }

        .social-links a:hover {
            color: var(--primary-color);
        }

        .copyright {
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .hero-content {
                grid-template-columns: 1fr;
            }
            
            .hero-text h1 {
                font-size: 2.5rem;
            }
            
            .hero-visual {
                height: 400px;
            }
        }

        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }
            
            .menu-toggle {
                display: block;
            }
            
            .hero-text h1 {
                font-size: 2rem;
            }
            
            .cta-buttons {
                flex-direction: column;
            }
            
            .password-options {
                grid-template-columns: 1fr;
            }
            
            .download-options {
                flex-direction: column;
                align-items: center;
            }
        }

        /* Notification Toast */
        .toast {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: var(--glass-bg);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 10px;
            padding: 15px 20px;
            display: flex;
            align-items: center;
            gap: 15px;
            transform: translateX(400px);
            transition: transform 0.3s ease;
            z-index: 1000;
        }

        .toast.show {
            transform: translateX(0);
        }

        .toast-icon {
            font-size: 1.5rem;
        }

        .toast-success .toast-icon {
            color: var(--success-color);
        }

        .toast-error .toast-icon {
            color: var(--accent-color);
        }

        .toast-message {
            font-weight: 500;
        }
    </style>
</head>
<body>
    <!-- Three.js Background Canvas -->
    <canvas id="bg-canvas"></canvas>

    <!-- Navigation -->
    <nav id="navbar">
        <div class="nav-container">
            <div class="logo">
                <i class="fas fa-lock"></i>
                <span>J-Random PassWord Gen</span>
            </div>
            <ul class="nav-links">
                <li><a href="#home">Home</a></li>
                <li><a href="#features">Features</a></li>
                <li><a href="#download">Download</a></li>
                <li><a href="#documentation">Documentation</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
            <button class="menu-toggle" id="menu-toggle">
                <i class="fas fa-bars"></i>
            </button>
        </div>
    </nav>

    <!-- Hero Section -->
    <section class="hero" id="home">
        <div class="hero-content">
            <div class="hero-text">
                <h1>Secure Passwords, Beautifully Designed</h1>
                <p>Generate strong, unique passwords with our modern glass-morphism interface. Keep your digital life secure with style.</p>
                <div class="cta-buttons">
                    <a href="#download" class="btn btn-primary">
                        <i class="fas fa-download"></i>
                        Download Now
                    </a>
                    <a href="#features" class="btn btn-secondary">
                        <i class="fas fa-info-circle"></i>
                        Learn More
                    </a>
                </div>
            </div>
            <div class="hero-visual">
                <div class="glass-container password-generator">
                    <div class="password-display">
                        <div class="password-text" id="password-text">Your secure password will appear here</div>
                        <button class="copy-btn" id="copy-btn">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <div class="slider-container">
                        <div class="slider-label">
                            <span>Password Length</span>
                            <span id="length-value">16</span>
                        </div>
                        <input type="range" min="8" max="32" value="16" class="slider" id="length-slider">
                    </div>
                    <div class="password-options">
                        <div class="option">
                            <input type="checkbox" id="uppercase" checked>
                            <label for="uppercase">Uppercase (A-Z)</label>
                        </div>
                        <div class="option">
                            <input type="checkbox" id="lowercase" checked>
                            <label for="lowercase">Lowercase (a-z)</label>
                        </div>
                        <div class="option">
                            <input type="checkbox" id="numbers" checked>
                            <label for="numbers">Numbers (0-9)</label>
                        </div>
                        <div class="option">
                            <input type="checkbox" id="symbols" checked>
                            <label for="symbols">Symbols (!@#$...)</label>
                        </div>
                    </div>
                    <div class="strength-indicator">
                        <div class="slider-label">
                            <span>Password Strength</span>
                            <span id="strength-text">-</span>
                        </div>
                        <div class="strength-bar">
                            <div class="strength-fill" id="strength-fill"></div>
                        </div>
                    </div>
                    <button class="generate-btn" id="generate-btn">
                        <i class="fas fa-sync-alt"></i>
                        Generate Password
                    </button>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features" id="features">
        <div class="section-header">
            <h2>Powerful Features</h2>
            <p>Discover what makes J-Random Password Generator the perfect tool for your security needs</p>
        </div>
        <div class="features-grid">
            <div class="glass-container feature-card">
                <div class="feature-icon">
                    <i class="fas fa-shield-alt"></i>
                </div>
                <h3>Cryptographically Secure</h3>
                <p>Uses cryptographically secure random generation to create truly unpredictable passwords that can't be guessed or cracked.</p>
            </div>
            <div class="glass-container feature-card">
                <div class="feature-icon">
                    <i class="fas fa-palette"></i>
                </div>
                <h3>Beautiful Glass UI</h3>
                <p>Enjoy a modern glass-morphism interface with transparency effects, smooth animations, and a stunning dark theme.</p>
            </div>
            <div class="glass-container feature-card">
                <div class="feature-icon">
                    <i class="fas fa-database"></i>
                </div>
                <h3>Local Database Storage</h3>
                <p>Store your passwords securely in a local MariaDB database, keeping them private and accessible only to you.</p>
            </div>
            <div class="glass-container feature-card">
                <div class="feature-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <h3>Password Strength Analysis</h3>
                <p>Get instant feedback on your password strength with a visual indicator that helps you create the most secure passwords.</p>
            </div>
            <div class="glass-container feature-card">
                <div class="feature-icon">
                    <i class="fas fa-sliders-h"></i>
                </div>
                <h3>Customizable Options</h3>
                <p>Control every aspect of your password generation with customizable length and character type options.</p>
            </div>
            <div class="glass-container feature-card">
                <div class="feature-icon">
                    <i class="fas fa-clone"></i>
                </div>
                <h3>One-Click Copy</h3>
                <p>Instantly copy generated passwords to your clipboard with a single click, making it easy to use them anywhere.</p>
            </div>
        </div>
    </section>

    <!-- Download Section -->
    <section class="download" id="download">
        <div class="download-container">
            <div class="section-header">
                <h2>Download J-Random Password Generator</h2>
                <p>Get the latest version for your platform and start generating secure passwords today</p>
            </div>
            <div class="download-options">
                <div class="glass-container download-card">
                    <h3><i class="fab fa-windows"></i> Windows</h3>
                    <p>Download the installer for Windows 10/11</p>
                    <a href="#" class="btn btn-primary">
                        <i class="fas fa-download"></i>
                        Download
                    </a>
                </div>
                <div class="glass-container download-card">
                    <h3><i class="fab fa-apple"></i> macOS</h3>
                    <p>Download the DMG for macOS 10.15+</p>
                    <a href="#" class="btn btn-primary">
                        <i class="fas fa-download"></i>
                        Download
                    </a>
                </div>
                <div class="glass-container download-card">
                    <h3><i class="fab fa-linux"></i> Linux</h3>
                    <p>Download the AppImage for Linux</p>
                    <a href="#" class="btn btn-primary">
                        <i class="fas fa-download"></i>
                        Download
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- Documentation Section -->
    <section class="documentation" id="documentation">
        <div class="doc-container">
            <div class="section-header">
                <h2>Documentation</h2>
                <p>Everything you need to know about J-Random Password Generator</p>
            </div>
            <div class="doc-tabs">
                <button class="doc-tab active" data-tab="getting-started">Getting Started</button>
                <button class="doc-tab" data-tab="installation">Installation</button>
                <button class="doc-tab" data-tab="usage">Usage</button>
                <button class="doc-tab" data-tab="api">API Reference</button>
            </div>
            <div class="doc-content active" id="getting-started">
                <div class="glass-container" style="padding: 30px;">
                    <div class="doc-section">
                        <h3>Welcome to J-Random Password Generator</h3>
                        <p>J-Random Password Generator is a modern, secure password generation tool with a beautiful glass-morphism interface. It helps you create strong, unique passwords to keep your digital accounts safe.</p>
                        <p>This guide will walk you through everything you need to know to get started with the application.</p>
                    </div>
                    <div class="doc-section">
                        <h3>Key Features</h3>
                        <ul>
                            <li>Cryptographically secure password generation</li>
                            <li>Customizable password length and character types</li>
                            <li>Visual password strength indicator</li>
                            <li>Local database storage for saved passwords</li>
                            <li>Modern glass-morphism UI with smooth animations</li>
                            <li>Cross-platform compatibility (Windows, macOS, Linux)</li>
                        </ul>
                    </div>
                    <div class="doc-section">
                        <h3>System Requirements</h3>
                        <ul>
                            <li>Java Runtime Environment (JRE) 17 or newer</li>
                            <li>MariaDB 10.6 or newer</li>
                            <li>Windows 10/11, macOS 10.15+, or Linux</li>
                            <li>At least 100MB of free disk space</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="doc-content" id="installation">
                <div class="glass-container" style="padding: 30px;">
                    <div class="doc-section">
                        <h3>Installation Guide</h3>
                        <p>Follow these steps to install J-Random Password Generator on your system:</p>
                    </div>
                    <div class="doc-section">
                        <h3>Step 1: Install Java</h3>
                        <p>The application requires Java 17 or newer to run.</p>
                        <ol>
                            <li>Go to the official <a href="https://www.oracle.com/java/technologies/downloads/" style="color: var(--primary-color);">Oracle Java Downloads</a> page.</li>
                            <li>Select your operating system and download the appropriate JRE or JDK.</li>
                            <li>Run the installer and follow the on-screen instructions.</li>
                            <li>Verify the installation by opening a command prompt and typing <code>java -version</code>.</li>
                        </ol>
                    </div>
                    <div class="doc-section">
                        <h3>Step 2: Install MariaDB</h3>
                        <p>The application uses MariaDB as its database backend.</p>
                        <ol>
                            <li>Go to the official <a href="https://mariadb.org/download/" style="color: var(--primary-color);">MariaDB Downloads</a> page.</li>
                            <li>Select your operating system and download the stable version of MariaDB Server.</li>
                            <li>Run the installer and follow the on-screen instructions.</li>
                            <li>During installation, set a password for the root user and remember it.</li>
                            <li>Ensure the "Install as service" option is checked (on Windows).</li>
                        </ol>
                    </div>
                    <div class="doc-section">
                        <h3>Step 3: Database Setup</h3>
                        <p>You need to create a database user for the application.</p>
                        <div class="code-block">
                            <pre>CREATE USER 'appuser'@'localhost' IDENTIFIED BY 'YourStrongPassword123!';
GRANT ALL PRIVILEGES ON password_db.* TO 'appuser'@'localhost';
FLUSH PRIVILEGES;</pre>
                        </div>
                        <p>Replace 'YourStrongPassword123!' with a secure password of your choice.</p>
                    </div>
                    <div class="doc-section">
                        <h3>Step 4: Install the Application</h3>
                        <ol>
                            <li>Download the appropriate installer for your operating system from the <a href="#download" style="color: var(--primary-color);">Download section</a>.</li>
                            <li>Run the installer and follow the on-screen instructions.</li>
                            <li>Launch the application from your desktop or start menu.</li>
                        </ol>
                    </div>
                </div>
            </div>
            <div class="doc-content" id="usage">
                <div class="glass-container" style="padding: 30px;">
                    <div class="doc-section">
                        <h3>Using J-Random Password Generator</h3>
                        <p>This guide will help you understand how to use all the features of J-Random Password Generator.</p>
                    </div>
                    <div class="doc-section">
                        <h3>Generating Passwords</h3>
                        <p>To generate a new password:</p>
                        <ol>
                            <li>Adjust the password length using the slider (8-32 characters).</li>
                            <li>Select the character types you want to include by checking the appropriate boxes.</li>
                            <li>Click the "Generate Password" button.</li>
                            <li>Your new password will appear in the display field.</li>
                        </ol>
                    </div>
                    <div class="doc-section">
                        <h3>Understanding Password Strength</h3>
                        <p>The password strength indicator helps you create secure passwords:</p>
                        <ul>
                            <li><strong style="color: var(--accent-color);">Weak (Red):</strong> Passwords that are short or use limited character types.</li>
                            <li><strong style="color: var(--warning-color);">Medium (Yellow):</strong> Passwords with moderate length and character variety.</li>
                            <li><strong style="color: var(--success-color);">Strong (Green):</strong> Long passwords with a good mix of character types.</li>
                        </ul>
                    </div>
                    <div class="doc-section">
                        <h3>Saving Passwords</h3>
                        <p>To save a password to your local database:</p>
                        <ol>
                            <li>Generate a password or enter one manually.</li>
                            <li>Click the "Save" button.</li>
                            <li>Enter a description for the password (e.g., "Gmail Account").</li>
                            <li>Click "OK" to save the password.</li>
                        </ol>
                    </div>
                    <div class="doc-section">
                        <h3>Managing Saved Passwords</h3>
                        <p>To view and manage your saved passwords:</p>
                        <ol>
                            <li>Click the "Show Database" button to reveal the password table.</li>
                            <li>To delete a password, select it in the table and click "Delete".</li>
                            <li>Click "Hide Database" to collapse the table view.</li>
                        </ol>
                    </div>
                </div>
            </div>
            <div class="doc-content" id="api">
                <div class="glass-container" style="padding: 30px;">
                    <div class="doc-section">
                        <h3>API Reference</h3>
                        <p>J-Random Password Generator provides a simple API for developers who want to integrate password generation into their own applications.</p>
                    </div>
                    <div class="doc-section">
                        <h3>Core Classes</h3>
                        <p>The application is built around two main classes:</p>
                        <ul>
                            <li><strong>PasswordGeneratorApp:</strong> The main application class that handles UI, password generation, and database operations.</li>
                            <li><strong>BlackGlassDialog:</strong> A helper class for creating custom-styled dialog windows.</li>
                        </ul>
                    </div>
                    <div class="doc-section">
                        <h3>Database Schema</h3>
                        <p>The application uses a simple database schema with one table:</p>
                        <div class="code-block">
                            <pre>CREATE TABLE passwords (
    id INT AUTO_INCREMENT PRIMARY KEY,
    password VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);</pre>
                        </div>
                    </div>
                    <div class="doc-section">
                        <h3>Configuration</h3>
                        <p>To configure the database connection, modify these constants in PasswordGeneratorApp.java:</p>
                        <div class="code-block">
                            <pre>private static final String DB_URL = "jdbc:mariadb://localhost:3306/password_db";
private static final String DB_USER = "appuser";
private static final String DB_PASSWORD = "YourStrongPassword123!";</pre>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer id="contact">
        <div class="footer-content">
            <div class="social-links">
                <a href="https://github.com/justinalexia" target="_blank">
                    <i class="fab fa-github"></i>
                </a>
                <a href="https://twitter.com/justinalexia" target="_blank">
                    <i class="fab fa-twitter"></i>
                </a>
                <a href="https://linkedin.com/in/justinalexia" target="_blank">
                    <i class="fab fa-linkedin"></i>
                </a>
                <a href="https://justinalexia.vercel.app" target="_blank">
                    <i class="fas fa-globe"></i>
                </a>
            </div>
            <div class="copyright">
                <p>&copy; 2023 J-Random Password Generator. All rights reserved. | Created with ‚ù§Ô∏è by <a href="https://justinalexia.vercel.app" style="color: var(--primary-color);">Justin Alexia</a></p>
            </div>
        </div>
    </footer>

    <!-- Toast Notification -->
    <div class="toast" id="toast">
        <div class="toast-icon">
            <i class="fas fa-check-circle"></i>
        </div>
        <div class="toast-message" id="toast-message">Password copied to clipboard!</div>
    </div>

    <!-- Three.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    
    <script>
        // Three.js Background Animation
        const canvas = document.getElementById('bg-canvas');
        let scene, camera, renderer, particles;

        function initThreeJS() {
            scene = new THREE.Scene();
            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            
            renderer = new THREE.WebGLRenderer({ canvas: canvas, alpha: true });
            renderer.setSize(window.innerWidth, window.innerHeight);
            renderer.setPixelRatio(window.devicePixelRatio);
            
            // Create particles
            const particlesGeometry = new THREE.BufferGeometry();
            const particlesCount = 5000;
            const posArray = new Float32Array(particlesCount * 3);
            
            for(let i = 0; i < particlesCount * 3; i++) {
                posArray[i] = (Math.random() - 0.5) * 10;
            }
            
            particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));
            
            // Materials
            const particlesMaterial = new THREE.PointsMaterial({
                size: 0.005,
                color: 0x4664f0,
                transparent: true,
                opacity: 0.8,
                blending: THREE.AdditiveBlending
            });
            
            // Mesh
            particles = new THREE.Points(particlesGeometry, particlesMaterial);
            scene.add(particles);
            
            camera.position.z = 3;
            
            // Handle window resize
            window.addEventListener('resize', () => {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
            });
        }
        
        function animateThreeJS() {
            requestAnimationFrame(animateThreeJS);
            
            particles.rotation.x += 0.0005;
            particles.rotation.y += 0.0005;
            
            renderer.render(scene, camera);
        }
        
        initThreeJS();
        animateThreeJS();

        // Navbar scroll effect
        window.addEventListener('scroll', () => {
            const navbar = document.getElementById('navbar');
            if (window.scrollY > 50) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
        });

        // Mobile menu toggle
        const menuToggle = document.getElementById('menu-toggle');
        const navLinks = document.querySelector('.nav-links');
        
        menuToggle.addEventListener('click', () => {
            navLinks.classList.toggle('active');
        });

        // Password Generator Functionality
        const passwordText = document.getElementById('password-text');
        const lengthSlider = document.getElementById('length-slider');
        const lengthValue = document.getElementById('length-value');
        const uppercaseCheck = document.getElementById('uppercase');
        const lowercaseCheck = document.getElementById('lowercase');
        const numbersCheck = document.getElementById('numbers');
        const symbolsCheck = document.getElementById('symbols');
        const generateBtn = document.getElementById('generate-btn');
        const copyBtn = document.getElementById('copy-btn');
        const strengthFill = document.getElementById('strength-fill');
        const strengthText = document.getElementById('strength-text');
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toast-message');

        // Update length value when slider changes
        lengthSlider.addEventListener('input', () => {
            lengthValue.textContent = lengthSlider.value;
        });

        // Generate password function
        function generatePassword() {
            const length = parseInt(lengthSlider.value);
            const useUppercase = uppercaseCheck.checked;
            const useLowercase = lowercaseCheck.checked;
            const useNumbers = numbersCheck.checked;
            const useSymbols = symbolsCheck.checked;
            
            if (!useUppercase && !useLowercase && !useNumbers && !useSymbols) {
                showToast('Please select at least one character type!', 'error');
                return;
            }
            
            let charset = '';
            if (useUppercase) charset += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
            if (useLowercase) charset += 'abcdefghijklmnopqrstuvwxyz';
            if (useNumbers) charset += '0123456789';
            if (useSymbols) charset += '!@#$%^&*()_+-=[]{}|;:,.<>?';
            
            let password = '';
            for (let i = 0; i < length; i++) {
                password += charset.charAt(Math.floor(Math.random() * charset.length));
            }
            
            passwordText.textContent = password;
            updatePasswordStrength(password);
        }

        // Update password strength indicator
        function updatePasswordStrength(password) {
            let strength = 0;
            
            // Length contributes to strength
            if (password.length >= 8) strength += 20;
            if (password.length >= 12) strength += 20;
            if (password.length >= 16) strength += 10;
            
            // Character variety contributes to strength
            if (/[a-z]/.test(password)) strength += 15;
            if (/[A-Z]/.test(password)) strength += 15;
            if (/[0-9]/.test(password)) strength += 15;
            if (/[^a-zA-Z0-9]/.test(password)) strength += 15;
            
            // Update UI based on strength
            strengthFill.className = 'strength-fill';
            
            if (strength < 40) {
                strengthFill.classList.add('strength-weak');
                strengthText.textContent = 'Weak';
            } else if (strength < 70) {
                strengthFill.classList.add('strength-medium');
                strengthText.textContent = 'Medium';
            } else {
                strengthFill.classList.add('strength-strong');
                strengthText.textContent = 'Strong';
            }
        }

        // Copy password to clipboard
        function copyPassword() {
            const password = passwordText.textContent;
            
            if (password === 'Your secure password will appear here') {
                showToast('Generate a password first!', 'error');
                return;
            }
            
            navigator.clipboard.writeText(password).then(() => {
                showToast('Password copied to clipboard!', 'success');
            }).catch(err => {
                showToast('Failed to copy password', 'error');
            });
        }

        // Show toast notification
        function showToast(message, type = 'success') {
            toastMessage.textContent = message;
            toast.className = 'toast show toast-' + type;
            
            const icon = toast.querySelector('.toast-icon i');
            if (type === 'success') {
                icon.className = 'fas fa-check-circle';
            } else {
                icon.className = 'fas fa-exclamation-circle';
            }
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }

        // Event listeners
        generateBtn.addEventListener('click', generatePassword);
        copyBtn.addEventListener('click', copyPassword);

        // Documentation tabs
        const docTabs = document.querySelectorAll('.doc-tab');
        const docContents = document.querySelectorAll('.doc-content');
        
        docTabs.forEach(tab => {
            tab.addEventListener('click', () => {
                const targetId = tab.getAttribute('data-tab');
                
                // Remove active class from all tabs and contents
                docTabs.forEach(t => t.classList.remove('active'));
                docContents.forEach(c => c.classList.remove('active'));
                
                // Add active class to clicked tab and corresponding content
                tab.classList.add('active');
                document.getElementById(targetId).classList.add('active');
            });
        });

        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                
                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                
                if (targetElement) {
                    window.scrollTo({
                        top: targetElement.offsetTop - 80,
                        behavior: 'smooth'
                    });
                    
                    // Close mobile menu if open
                    navLinks.classList.remove('active');
                }
            });
        });

        // Generate initial password on page load
        window.addEventListener('load', () => {
            generatePassword();
        });
    </script>
</body>
</html>
