<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IRON VAULT - SECURE CONTACT SYSTEM</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700;900&family=Rajdhani:wght@300;400;500;600;700&display=swap');
        
        * {
            font-family: 'Rajdhani', sans-serif;
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            background: #000;
            color: #fff;
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }
        
        .iron-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 30%, rgba(218, 165, 32, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 80% 70%, rgba(255, 0, 0, 0.1) 0%, transparent 50%),
                linear-gradient(135deg, #000000 0%, #1a1a1a 50%, #000000 100%);
            z-index: -1;
        }
        
        .arc-reactor {
            position: fixed;
            top: 20px;
            left: 20px;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: radial-gradient(circle, #d4af37 0%, #f1c40f 30%, #d4af37 60%, transparent 70%);
            box-shadow: 0 0 30px #d4af37, 0 0 60px #d4af37;
            animation: pulse 2s infinite;
            z-index: 10;
        }
        
        .arc-reactor::before {
            content: "";
            position: absolute;
            top: 10px;
            left: 10px;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: radial-gradient(circle, #fff 0%, #d4af37 50%, transparent 70%);
        }
        
        .arc-reactor::after {
            content: "";
            position: absolute;
            top: 20px;
            left: 20px;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #fff;
            box-shadow: 0 0 10px #fff;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            position: relative;
            z-index: 1;
        }
        
        .header {
            text-align: center;
            margin-bottom: 40px;
            padding: 20px;
            position: relative;
        }
        
        .header h1 {
            font-family: 'Orbitron', monospace;
            font-weight: 900;
            font-size: 3rem;
            background: linear-gradient(90deg, #d4af37, #ff4d4d);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 0 30px rgba(212, 175, 55, 0.5);
            margin-bottom: 10px;
            letter-spacing: 3px;
        }
        
        .header p {
            font-size: 1.2rem;
            color: #d4af37;
            font-weight: 300;
            letter-spacing: 2px;
        }
        
        .auth-container, .vault-container, .blocked-container {
            background: linear-gradient(135deg, rgba(20, 20, 20, 0.9) 0%, rgba(10, 10, 10, 0.95) 100%);
            border: 1px solid #d4af37;
            border-radius: 15px;
            padding: 40px;
            margin-bottom: 30px;
            box-shadow: 0 0 30px rgba(212, 175, 55, 0.3), inset 0 0 20px rgba(212, 175, 55, 0.1);
            position: relative;
            overflow: hidden;
        }
        
        .auth-container::before, .vault-container::before, .blocked-container::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                linear-gradient(90deg, transparent 0%, rgba(212, 175, 55, 0.05) 50%, transparent 100%),
                linear-gradient(0deg, transparent 0%, rgba(212, 175, 55, 0.05) 50%, transparent 100%);
            pointer-events: none;
        }
        
        .vault-container, .blocked-container {
            display: none;
        }
        
        .form-control {
            background: rgba(0, 0, 0, 0.7);
            border: 1px solid #d4af37;
            color: #fff;
            border-radius: 10px;
            padding: 15px;
            font-size: 1.1rem;
            transition: all 0.3s;
        }
        
        .form-control:focus {
            background: rgba(0, 0, 0, 0.8);
            border-color: #d4af37;
            color: #fff;
            box-shadow: 0 0 0 0.25rem rgba(212, 175, 55, 0.25);
        }
        
        .btn {
            border-radius: 10px;
            font-weight: 600;
            padding: 12px 25px;
            font-size: 1rem;
            transition: all 0.3s;
            border: none;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .btn-primary {
            background: linear-gradient(90deg, #d4af37, #f1c40f);
            color: #000;
        }
        
        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(212, 175, 55, 0.3);
        }
        
        .btn-success {
            background: linear-gradient(90deg, #2ecc71, #27ae60);
            color: #fff;
        }
        
        .btn-success:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(46, 204, 113, 0.3);
        }
        
        .btn-danger {
            background: linear-gradient(90deg, #e74c3c, #c0392b);
            color: #fff;
        }
        
        .btn-danger:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(231, 76, 60, 0.3);
        }
        
        .btn-outline {
            background: transparent;
            border: 2px solid #d4af37;
            color: #d4af37;
        }
        
        .btn-outline:hover {
            background: rgba(212, 175, 55, 0.1);
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(212, 175, 55, 0.2);
        }
        
        .search-section {
            background: rgba(0, 0, 0, 0.5);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
            border: 1px solid rgba(212, 175, 55, 0.3);
        }
        
        .search-section h3 {
            color: #d4af37;
            margin-bottom: 20px;
            font-weight: 700;
            font-family: 'Orbitron', monospace;
        }
        
        .contact-item {
            background: rgba(0, 0, 0, 0.5);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            border-left: 4px solid #d4af37;
            transition: all 0.3s;
        }
        
        .contact-item:hover {
            transform: translateX(5px);
            box-shadow: 0 5px 15px rgba(212, 175, 55, 0.2);
        }
        
        .contact-item h5 {
            color: #d4af37;
            font-weight: 700;
            margin-bottom: 10px;
            font-size: 1.3rem;
        }
        
        .contact-item p {
            margin-bottom: 15px;
            font-size: 1.1rem;
        }
        
        .contact-actions {
            display: flex;
            gap: 10px;
        }
        
        .timer-container {
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #e74c3c;
            border-radius: 15px;
            padding: 15px;
            z-index: 1000;
            display: none;
            box-shadow: 0 10px 30px rgba(231, 76, 60, 0.3);
        }
        
        .timer-container .timer-label {
            color: #e74c3c;
            font-weight: 600;
            margin-bottom: 5px;
            text-align: center;
        }
        
        .timer-container .timer {
            color: #e74c3c;
            font-weight: 700;
            font-size: 1.5rem;
            text-align: center;
            font-family: 'Orbitron', monospace;
        }
        
        .notification {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0, 0, 0, 0.8);
            border: 1px solid #d4af37;
            border-radius: 15px;
            padding: 20px;
            z-index: 1001;
            display: none;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
            max-width: 80%;
            text-align: center;
        }
        
        .notification .notification-title {
            color: #d4af37;
            font-weight: 700;
            margin-bottom: 10px;
            font-size: 1.2rem;
        }
        
        .notification .notification-message {
            color: #fff;
            font-weight: 500;
        }
        
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 2000;
            display: none;
        }
        
        .loading-content {
            text-align: center;
        }
        
        .loading-spinner {
            width: 80px;
            height: 80px;
            border: 8px solid rgba(212, 175, 55, 0.3);
            border-radius: 50%;
            border-top-color: #d4af37;
            animation: spin 1s ease-in-out infinite;
            margin: 0 auto 20px;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .loading-text {
            color: #d4af37;
            font-weight: 600;
            font-size: 1.2rem;
        }
        
        .security-warning {
            background: rgba(231, 76, 60, 0.1);
            border: 1px solid #e74c3c;
            color: #e74c3c;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            text-align: center;
            display: none;
            font-weight: 600;
        }
        
        .attempts-counter {
            text-align: center;
            margin-top: 20px;
            color: #e74c3c;
            font-weight: 600;
            font-size: 1.1rem;
        }
        
        .footer {
            text-align: center;
            margin-top: 50px;
            padding: 20px;
            font-size: 0.9rem;
            color: #666;
            border-top: 1px solid rgba(212, 175, 55, 0.2);
        }
        
        .hologram-effect {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                linear-gradient(0deg, transparent 24%, rgba(212, 175, 55, 0.05) 25%, rgba(212, 175, 55, 0.05) 26%, transparent 27%, transparent 74%, rgba(212, 175, 55, 0.05) 75%, rgba(212, 175, 55, 0.05) 76%, transparent 77%, transparent),
                linear-gradient(90deg, transparent 24%, rgba(212, 175, 55, 0.05) 25%, rgba(212, 175, 55, 0.05) 26%, transparent 27%, transparent 74%, rgba(212, 175, 55, 0.05) 75%, rgba(212, 175, 55, 0.05) 76%, transparent 77%, transparent);
            background-size: 50px 50px;
            pointer-events: none;
            z-index: -1;
            opacity: 0.3;
        }
        
        .jarvis-voice {
            background: rgba(0, 0, 0, 0.5);
            border: 1px solid #d4af37;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
            font-style: italic;
            position: relative;
            min-height: 60px;
        }
        
        .jarvis-voice::before {
            content: """;
            position: absolute;
            top: -10px;
            left: 10px;
            font-size: 3rem;
            color: rgba(212, 175, 55, 0.3);
        }
        
        .jarvis-voice::after {
            content: """;
            position: absolute;
            bottom: -30px;
            right: 10px;
            font-size: 3rem;
            color: rgba(212, 175, 55, 0.3);
        }
        
        .jarvis-typing {
            display: inline-block;
        }
        
        .jarvis-cursor {
            display: inline-block;
            width: 3px;
            height: 1.2em;
            background-color: #d4af37;
            animation: blink 1s infinite;
            vertical-align: text-bottom;
            margin-left: 2px;
        }
        
        @keyframes blink {
            0%, 100% { opacity: 1; }
            50% { opacity: 0; }
        }
        
        .empty-state {
            text-align: center;
            padding: 40px;
            color: #a0a0ff;
        }
        
        .empty-state i {
            font-size: 4rem;
            margin-bottom: 20px;
            color: rgba(212, 175, 55, 0.3);
        }
        
        .contact-card {
            background: rgba(0, 0, 0, 0.5);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            border: 1px solid rgba(212, 175, 55, 0.3);
            transition: all 0.3s;
        }
        
        .contact-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(212, 175, 55, 0.2);
        }
        
        .contact-card h5 {
            color: #d4af37;
            font-weight: 700;
            margin-bottom: 15px;
            font-size: 1.3rem;
        }
        
        .contact-card .number {
            font-size: 1.2rem;
            margin-bottom: 15px;
            color: #fff;
        }
        
        .contact-card .actions {
            display: flex;
            gap: 10px;
        }
        
        .system-status {
            position: fixed;
            bottom: 20px;
            left: 20px;
            background: rgba(0, 0, 0, 0.8);
            border: 1px solid #d4af37;
            border-radius: 10px;
            padding: 15px;
            z-index: 1000;
            display: none;
            box-shadow: 0 0 15px rgba(212, 175, 55, 0.3);
        }
        
        .system-status .status-item {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }
        
        .system-status .status-item:last-child {
            margin-bottom: 0;
        }
        
        .system-status .status-icon {
            color: #2ecc71;
            margin-right: 10px;
        }
        
        .system-status .status-text {
            color: #d4af37;
            font-size: 0.9rem;
            font-weight: 600;
        }
        
        .power-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
            border: none;
            color: #fff;
            font-size: 1.5rem;
            box-shadow: 0 0 15px rgba(231, 76, 60, 0.5);
            cursor: pointer;
            z-index: 1000;
            transition: all 0.3s;
            display: none;
        }
        
        .power-button:hover {
            transform: scale(1.1);
            box-shadow: 0 0 25px rgba(231, 76, 60, 0.8);
        }
    </style>
</head>
<body>
    <div class="iron-bg"></div>
    <div class="arc-reactor"></div>
    
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="loading-spinner"></div>
            <div class="loading-text" id="loadingText">INITIALIZING J.A.R.V.I.S. PROTOCOLS...</div>
        </div>
    </div>
    
    <div class="notification" id="notification">
        <div class="notification-title" id="notificationTitle">J.A.R.V.I.S. NOTIFICATION</div>
        <div class="notification-message" id="notificationMessage">System message</div>
    </div>
    
    <div class="system-status" id="systemStatus">
        <div class="status-item">
            <i class="fas fa-shield-alt status-icon"></i>
            <span class="status-text">SECURITY: ACTIVE</span>
        </div>
        <div class="status-item">
            <i class="fas fa-wifi status-icon"></i>
            <span class="status-text">NETWORK: SECURE</span>
        </div>
        <div class="status-item">
            <i class="fas fa-lock status-icon"></i>
            <span class="status-text">ENCRYPTION: AES-256</span>
        </div>
    </div>
    
    <button class="power-button" id="powerButton" title="Emergency Shutdown">
        <i class="fas fa-power-off"></i>
    </button>
    
    <div class="container">
        <div class="header">
            <h1>IRON VAULT</h1>
            <p>SECURE CONTACT MANAGEMENT SYSTEM</p>
        </div>
        
        <!-- Authentication Container -->
        <div class="auth-container" id="authContainer">
            <div class="security-warning" id="securityWarning">
                <i class="fas fa-exclamation-triangle me-2"></i> SECURITY ALERT: DEVELOPER TOOLS DETECTED. INITIATING COUNTERMEASURES...
            </div>
            
            <h2 class="text-center mb-4">SECURITY AUTHENTICATION</h2>
            <p class="text-center mb-4">Enter your access code to unlock the vault</p>
            
            <form id="loginForm">
                <div class="mb-4">
                    <div class="input-group">
                        <input type="password" class="form-control" id="password" placeholder="Enter access code" required>
                        <button class="btn btn-outline" type="button" id="togglePassword">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">UNLOCK VAULT</button>
                </div>
            </form>
            
            <div class="attempts-counter" id="attemptsCounter">
                REMAINING ATTEMPTS: <span id="remainingAttempts">2</span>
            </div>
            
            <div class="jarvis-voice" id="jarvisLogin">
                <span class="jarvis-typing"></span><span class="jarvis-cursor"></span>
            </div>
        </div>
        
        <!-- Vault Container -->
        <div class="vault-container" id="vaultContainer">
            <div class="hologram-effect"></div>
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-shield-check me-2"></i>SECURE VAULT</h2>
                <button class="btn btn-danger" id="logoutBtn">
                    <i class="fas fa-sign-out-alt me-2"></i>LOGOUT
                </button>
            </div>
            
            <!-- Search Section -->
            <div class="search-section">
                <h3><i class="fas fa-search me-2"></i>CONTACT SEARCH</h3>
                <div class="input-group mb-3">
                    <input type="text" class="form-control" id="searchInput" placeholder="Search by name or number...">
                    <button class="btn btn-primary" id="searchBtn">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
            
            <!-- Contacts List -->
            <div id="contactsList">
                <div class="empty-state">
                    <i class="fas fa-user-shield"></i>
                    <p>Loading contacts...</p>
                </div>
            </div>
        </div>
        
        <!-- Blocked Container -->
        <div class="blocked-container" id="blockedContainer">
            <div class="hologram-effect"></div>
            <div class="text-center">
                <i class="fas fa-ban fa-4x mb-4" style="color: #e74c3c;"></i>
                <h2>ACCESS DENIED</h2>
                <p class="mb-4">This device has been permanently blocked due to multiple failed authentication attempts.</p>
                <p>Your device information has been logged and reported.</p>
                <button class="btn btn-danger mt-3" onclick="redirectBlocked()">
                    <i class="fas fa-external-link-alt me-2"></i>LEAVE SYSTEM
                </button>
            </div>
        </div>
        
        <div class="footer">
            <p>© 2023 IRON VAULT | J.A.R.V.I.S. SECURE SYSTEM | ALL RIGHTS RESERVED</p>
        </div>
    </div>
    
    <div class="timer-container" id="timerContainer">
        <div class="timer-label">SESSION TIME REMAINING:</div>
        <div class="timer" id="sessionTimer">00:30</div>
    </div>

    <script>
    // Only Base64 encoded — no XOR encryption
    const encryptedContacts = [
    { name: "VGhhbmF5IEtyaXNobmEgQ1U=", phone: "KzkxODI4MTcxNDUyMg==" },
    { name: "RGhlZXJhanAgUHJhc2Fk", phone: "KzkxODg5MTAwNzAyMQ==" },
    { name: "U2hhbW1hcyIs phone: "KzkxNzc2MzYxNzQwNTg=" },
    { name: "Umluc2hhZA==", phone: "KzkxODcxNDI5NzM0NQ==" },
    { name: "QWRpdGh5YW4=", phone: "KzkxOTY1NjUxNTg4OQ==" },
    { name: "TWlsYW4gUmFwaHk=", phone: "KzkxOTIwNzE2NjkyNg==" },
    { name: "U2hpYmls", phone: "KzkxNzUxMTM4ODI5" },
    { name: "QWRoZXJzaCBQIFByYW1vZA==", phone: "KzkxOTk5NTgyMzEwNw==" },
    { name: "U3JlZW5hdCBTcmVlbmF0aA==", phone: "KzkxODg5MTYzMzI4MQ==" },
    { name: "QWxlbiBTYW50aG9zaA==", phone: "KzkxOTc3ODA3NDk2MQ==" },
    { name: "SGliYSBBYmR1bCBIYWtlZW0=", phone: "KzkxODcxNDM5NjE5NA==" },
    { name: "QWFrYXNo", phone: "KzkxODA3ODQ0OTU1Mg==" },
    { name: "QW5ha2hh", phone: "KzkxOTA3NDA0MDUzMg==" },
    { name: "QXNoaWsgRGV2aWwgVGlnZXJzIE1vZHM=", phone: "KzkxIDgxMzkwIDUwODE0" },
    { name: "QXRobHVsIEtyaXNobmE=", phone: "OTc4OTAgNTQ2ODM=" },
    { name: "QXZpbiBTdW5ueQ==", phone: "KzkxODU5MDM1NTAwMw==" },
    { name: "QmVuIChMdWNpIE1vZHMp", phone: "KzkxIDYyMzg3IDI3MzMy" },
    { name: "RFIuIFNhbmRlZXAgU2ly", phone: "KzkxIDk0NDY4IDM0MzQ0" },
    { name: "RFMgSE9E", phone: "OTc0NjggNzEyMDQ=" },
    { name: "RGhhcmFtZXR0YW4gU21hc2FuYW0=", phone: "KzkxIDc3MzYyIDUxMDMy" },
    { name: "RHJ1ZGhhbg==", phone: "KzkxIDczNTY0IDI1MjM5" },
    { name: "SGFyaWtyaXNobmFuIEcgUg==", phone: "KzkxOTQ0NjYxMDQwNw==" },
    { name: "SGliYSIgKFNlbmlvcik=", phone: "KzkxNjIzNTg5OTIzOQ==" },
    { name: "SGliYSBBYmR1bCBIYWtlZW0=", phone: "KzkxOTYzMzkzOTkzMA==" },
    { name: "SWhzYW4gKEJ0ZWNoKQ==", phone: "KzkxOTg0NjIwNzk3MQ==" },
    { name: "SmFzaW0gKEpabW9kcyk=", phone: "KzkxIDgwODkyIDc2MzA4" },
    { name: "Sm9zIFAgSm9tb24=", phone: "KzkxOTc0NjYxNjMzMQ==" },
    { name: "S2FsaWRzIHZybw==", phone: "KzkxIDc3MzY3IDYzMjY5" },
    { name: "TmFndWw=", phone: "KzkxODU0Nzg3Mzk5Ng==" },
    { name: "TmFpdGhpaA==", phone: "KzkxIDgyODEwIDEwNTgx" },
    { name: "TmFqaW0=", phone: "KzkxODcxNDUzMTk3NA==" },
    { name: "UGhvIG5p eCBNb2Rz", phone: "KzkxIDgxNTcwIDQ1NzY0" },
    { name: "UmFpaGFuYXRo", phone: "KzkxNzAzNDE2NjMzMQ==" },
    { name: "UmFtemFu", phone: "KzkxNjI4MjA3MzgzMA==" },
    { name: "UmlzaGFk", phone: "KzkxIDk5OTUyIDQzNTM3" },
    { name: "U2FmdmFu", phone: "KzkxODcxNDE5NTE5MA==" },
    { name: "RHAgU2hpa2hpbCBIb21l", phone: "KzkxIDc3MzY3IDU5ODk4" },
    { name: "U2luYW4=", phone: "KzkxNjIzNTgzNDU3MA==" },
    { name: "VHJlbmRTdG9yZSBSZXNlbGxlcg==", phone: "KzkxIDgzMzA4IDI0MDM0" },
    { name: "VW1haXI=", phone: "KzkxODcxNDcxNDg4Mw==" },
    { name: "REsgU0lSIG9n", phone: "NjI4MjYzMzQzNw==" }
];

    // Base64 decoding only
    function base64Decode(str) {
        try {
            return decodeURIComponent(escape(atob(str.trim())));
        } catch (e) {
            console.error("Base64 decode error:", e);
            return "Invalid Data";
        }
    }

    // Decrypt contacts — only Base64 decode
    function decryptContacts() {
        return encryptedContacts.map(contact => {
            const name = base64Decode(contact.name);
            const phone = base64Decode(contact.phone);
            return { name, phone };
        });
    }

    // Show loading overlay
    document.getElementById('loadingOverlay').style.display = 'flex';

    // Security measures to prevent developer tools
    (function() {
        'use strict';

        // Check if device is blocked
        if (localStorage.getItem('deviceBlocked') === 'true') {
            document.getElementById('authContainer').style.display = 'none';
            document.getElementById('blockedContainer').style.display = 'block';
            document.getElementById('loadingOverlay').style.display = 'none';
            return;
        }

        // Disable right-click
        document.addEventListener('contextmenu', function(e) {
            e.preventDefault();
            return false;
        });

        // Disable common keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (
                e.keyCode === 123 || 
                (e.ctrlKey && e.shiftKey && (e.keyCode === 73 || e.keyCode === 74 || e.keyCode === 67)) || 
                (e.ctrlKey && e.keyCode === 85)
            ) {
                e.preventDefault();
                showSecurityWarning();
                return false;
            }
        });

        // Check for dev tools open
        let devtools = {open: false, orientation: null};
        const threshold = 160;

        setInterval(function() {
            if (window.outerHeight - window.innerHeight > threshold || 
                window.outerWidth - window.innerWidth > threshold) {
                if (!devtools.open) {
                    devtools.open = true;
                    showSecurityWarning();
                }
            } else {
                devtools.open = false;
            }
        }, 500);

        // Function to show security warning and redirect
        function showSecurityWarning() {
            document.getElementById('securityWarning').style.display = 'block';
            setTimeout(function() {
                window.location.href = 'https://www.starkindustries.com'; // Fixed: no extra spaces
            }, 2000);
        }

        // Console warning
        console.clear();
        console.log("%cIRON VAULT SECURITY ALERT: Unauthorized access to this system is prohibited.", "color: #d4af37; font-size: 20px; font-weight: bold;");
        console.log("%cYour IP address has been logged. J.A.R.V.I.S. is monitoring all activities on this system.", "color: #d4af37; font-size: 16px;");

        // Disable drag and drop
        document.addEventListener('dragstart', function(e) {
            e.preventDefault();
            return false;
        });

        // Disable text selection (partial)
        document.addEventListener('selectstart', function(e) {
            if (document.getElementById('vaultContainer').style.display !== 'none') {
                e.preventDefault();
                return false;
            }
        });
    })();

    // Initialize variables
    let failedAttempts = parseInt(localStorage.getItem('failedAttempts') || '0');
    let sessionTimer;
    let timeRemaining = 30; // Reset to 30s each session
    let contacts = [];

    // Update attempts counter on page load
    document.getElementById('remainingAttempts').textContent = 2 - failedAttempts;

    // Type J.A.R.V.I.S. message effect
    function typeJarvisMessage(elementId, message) {
        const element = document.getElementById(elementId);
        const typingElement = element.querySelector('.jarvis-typing');
        const cursorElement = element.querySelector('.jarvis-cursor');

        typingElement.textContent = '';
        let i = 0;
        const typingInterval = setInterval(function() {
            if (i < message.length) {
                typingElement.textContent += message.charAt(i);
                i++;
            } else {
                clearInterval(typingInterval);
            }
        }, 50);
    }

    // Show notification
    function showNotification(title, message) {
        const notification = document.getElementById('notification');
        const notificationTitle = document.getElementById('notificationTitle');
        const notificationMessage = document.getElementById('notificationMessage');

        notificationTitle.textContent = title;
        notificationMessage.textContent = message;

        notification.style.display = 'block';

        setTimeout(function() {
            notification.style.display = 'none';
        }, 3000);
    }

    // Display contacts
    function displayContacts(contactsToDisplay = contacts) {
        const container = document.getElementById('contactsList');

        if (contactsToDisplay.length === 0) {
            container.innerHTML = `
                <div class="empty-state">
                    <i class="fas fa-user-slash"></i>
                    <p>No contacts found matching your search.</p>
                </div>
            `;
            return;
        }

        container.innerHTML = '';
        contactsToDisplay.forEach((contact, index) => {
            const contactCard = document.createElement('div');
            contactCard.className = 'contact-card';
            contactCard.innerHTML = `
                <h5>${contact.name}</h5>
                <div class="number">${contact.phone}</div>
                <div class="actions">
                    <button class="btn btn-success" onclick="makeCall('${contact.phone}')">
                        <i class="fas fa-phone me-1"></i> CALL
                    </button>
                    <button class="btn btn-success" onclick="sendWhatsApp('${contact.phone}')">
                        <i class="fab fa-whatsapp me-1"></i> WHATSAPP
                    </button>
                </div>
            `;
            container.appendChild(contactCard);
        });
    }

    // Search contacts
    function searchContacts() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        if (searchTerm === '') {
            displayContacts();
            return;
        }
        const filteredContacts = contacts.filter(contact => 
            contact.name.toLowerCase().includes(searchTerm) || 
            contact.phone.includes(searchTerm)
        );
        displayContacts(filteredContacts);
    }

    // Password validation
    document.getElementById('loginForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const password = document.getElementById('password').value;

        if (password === 'justin3237') {
            // Reset attempts
            localStorage.setItem('failedAttempts', '0');
            failedAttempts = 0;

            // Show vault
            document.getElementById('authContainer').style.display = 'none';
            document.getElementById('vaultContainer').style.display = 'block';
            document.getElementById('timerContainer').style.display = 'block';
            document.getElementById('systemStatus').style.display = 'block';
            document.getElementById('powerButton').style.display = 'block';

            // Decrypt and display contacts
            contacts = decryptContacts();
            displayContacts();

            // Reset and start timer
            timeRemaining = 30; // Reset time
            document.getElementById('sessionTimer').style.color = '#e74c3c'; // Reset color
            startSessionTimer();

            // Messages
            typeJarvisMessage('jarvisLogin', 'Access granted, sir. All contacts decrypted and ready for your command.');
            showNotification('ACCESS GRANTED', 'Vault unlocked successfully.');
        } else {
            failedAttempts++;
            localStorage.setItem('failedAttempts', failedAttempts.toString());
            document.getElementById('remainingAttempts').textContent = 2 - failedAttempts;
            document.getElementById('password').value = '';

            typeJarvisMessage('jarvisLogin', `Authentication failed. ${2 - failedAttempts} attempts remaining before lockdown.`);
            showNotification('ACCESS DENIED', `Invalid access code. ${2 - failedAttempts} attempts remaining.`);

            if (failedAttempts >= 2) {
                blockDevice();
            }
        }
    });

    // Toggle password visibility
    document.getElementById('togglePassword').addEventListener('click', function() {
        const passwordInput = document.getElementById('password');
        const icon = this.querySelector('i');
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.replace('fa-eye', 'fa-eye-slash');
        } else {
            passwordInput.type = 'password';
            icon.classList.replace('fa-eye-slash', 'fa-eye');
        }
    });

    // Search functionality
    document.getElementById('searchBtn').addEventListener('click', searchContacts);
    document.getElementById('searchInput').addEventListener('keyup', function(e) {
        if (e.key === 'Enter') {
            searchContacts();
        }
    });

    // Logout functionality
    document.getElementById('logoutBtn').addEventListener('click', function() {
        logout('manual');
    });

    // Emergency shutdown
    document.getElementById('powerButton').addEventListener('click', function() {
        if (confirm('Are you sure you want to initiate emergency shutdown?')) {
            logout('emergency');
        }
    });

    // Session timer
    function startSessionTimer() {
        updateTimerDisplay();
        sessionTimer = setInterval(function() {
            timeRemaining--;
            updateTimerDisplay();
            if (timeRemaining <= 0) {
                logout('timeout');
            }
        }, 1000);
    }

    function updateTimerDisplay() {
        document.getElementById('sessionTimer').textContent = `00:${timeRemaining.toString().padStart(2, '0')}`;
        const timerEl = document.getElementById('sessionTimer');
        if (timeRemaining <= 10) {
            timerEl.style.color = '#e74c3c';
            if (timeRemaining === 10) {
                showNotification('SESSION WARNING', 'Session will expire in 10 seconds.');
            }
        } else {
            timerEl.style.color = '#e74c3c'; // Keep consistent color
        }
    }

    // Logout function
    function logout(reason) {
        clearInterval(sessionTimer);
        timeRemaining = 30; // Reset for next login

        document.getElementById('vaultContainer').style.display = 'none';
        document.getElementById('timerContainer').style.display = 'none';
        document.getElementById('systemStatus').style.display = 'none';
        document.getElementById('powerButton').style.display = 'none';
        document.getElementById('authContainer').style.display = 'block';
        document.getElementById('password').value = '';

        const timerEl = document.getElementById('sessionTimer');
        timerEl.style.color = '#e74c3c'; // Reset color

        let message, notificationMsg;
        if (reason === 'manual') {
            message = 'Session terminated. Security protocols re-engaged. Have a good day, sir.';
            notificationMsg = 'SESSION TERMINATED';
        } else if (reason === 'timeout') {
            message = 'Session expired due to inactivity. Security protocols re-engaged.';
            notificationMsg = 'SESSION EXPIRED';
        } else if (reason === 'emergency') {
            message = 'Emergency shutdown initiated. All systems offline.';
            notificationMsg = 'EMERGENCY SHUTDOWN';
        }
        typeJarvisMessage('jarvisLogin', message);
        showNotification(notificationMsg, notificationMsg.includes('SHUTDOWN') ? 'All systems have been secured.' : 'Automatic logout due to inactivity.');
    }

    // Block device
    function blockDevice() {
        localStorage.setItem('deviceBlocked', 'true');
        document.getElementById('authContainer').style.display = 'none';
        document.getElementById('blockedContainer').style.display = 'block';
    }

    // Redirect blocked device
    function redirectBlocked() {
        window.location.href = 'https://www.starkindustries.com'; // Fixed: no extra spaces
    }

    // Make call
    function makeCall(number) {
        showNotification('INITIATING CALL', `Dialing ${number}...`);
        setTimeout(function() {
            window.open(`tel:${number}`, '_self');
        }, 1000);
    }

    // Send WhatsApp
    function sendWhatsApp(number) {
        const cleanNumber = number.replace(/\D/g, ''); // Remove non-digits
        showNotification('OPENING WHATSAPP', `Connecting to ${cleanNumber}...`);
        setTimeout(function() {
            window.open(`https://wa.me/${cleanNumber}`, '_blank'); // ✅ Fixed: no extra spaces
        }, 1000);
    }

    // Clear session on page close
    window.addEventListener('beforeunload', function() {
        sessionStorage.clear();
    });

    // Initialize page
    window.addEventListener('load', function() {
        setTimeout(function() {
            document.getElementById('loadingOverlay').style.display = 'none';
            typeJarvisMessage('jarvisLogin', 'Good morning, sir. Initiating security protocols. Please enter your access code to proceed.');
        }, 1500);
    });
</script>
</body>
</html>