<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Justin Alexia - Quantum Developer & Researcher</title>
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Geist:wght@300;400;500;600;700&family=Space+Grotesk:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        /* Critical CSS - Reset & Base */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        :root {
            --primary-gradient: linear-gradient(135deg, #ffffff, #f5f5f5);
            --accent-gradient: linear-gradient(135deg, #000000, #333333);
            --glass-bg: rgba(255, 255, 255, 0.1);
            --glass-border: rgba(255, 255, 255, 0.2);
            --dark-glass-bg: rgba(0, 0, 0, 0.1);
            --dark-glass-border: rgba(0, 0, 0, 0.2);
            --text-primary: #000000;
            --text-secondary: #333333;
            --text-light: #ffffff;
            --section-padding: 5rem 0;
            --fluid-animation-duration: 15s;
        }
        
        html {
            scroll-behavior: smooth;
        }
        
        body {
            font-family: 'Geist', sans-serif;
            background: var(--primary-gradient);
            color: var(--text-primary);
            overflow-x: hidden;
            min-height: 100vh;
            line-height: 1.6;
            position: relative;
            cursor: none;
        }
        
        /* Custom Cursor */
        .cursor {
            position: fixed;
            width: 20px;
            height: 20px;
            border: 2px solid var(--text-primary);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            pointer-events: none;
            transition: all 0.1s ease;
            z-index: 9998;
            mix-blend-mode: difference;
        }
        
        .cursor-follower {
            position: fixed;
            width: 40px;
            height: 40px;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            pointer-events: none;
            transition: all 0.3s ease;
            z-index: 9997;
        }
        
        .cursor.hover {
            width: 40px;
            height: 40px;
            background: rgba(0, 0, 0, 0.1);
            border-color: transparent;
        }
        
        /* Fluid Background Animation */
        .fluid-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }
        
        .fluid-shape {
            position: absolute;
            border-radius: 50%;
            filter: blur(40px);
            opacity: 0.4;
            animation: fluidMove var(--fluid-animation-duration) infinite ease-in-out;
        }
        
        .fluid-shape:nth-child(1) {
            width: 600px;
            height: 600px;
            background: linear-gradient(45deg, rgba(255, 255, 255, 0.8), rgba(0, 0, 0, 0.2));
            top: -200px;
            left: -200px;
            animation-duration: 20s;
        }
        
        .fluid-shape:nth-child(2) {
            width: 800px;
            height: 800px;
            background: linear-gradient(45deg, rgba(0, 0, 0, 0.3), rgba(255, 255, 255, 0.5));
            bottom: -300px;
            right: -300px;
            animation-duration: 25s;
            animation-delay: 5s;
        }
        
        .fluid-shape:nth-child(3) {
            width: 500px;
            height: 500px;
            background: linear-gradient(45deg, rgba(255, 255, 255, 0.6), rgba(0, 0, 0, 0.4));
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            animation-duration: 30s;
            animation-delay: 10s;
        }
        
        .fluid-shape:nth-child(4) {
            width: 400px;
            height: 400px;
            background: linear-gradient(45deg, rgba(0, 0, 0, 0.2), rgba(255, 255, 255, 0.3));
            top: 20%;
            right: 10%;
            animation-duration: 22s;
            animation-delay: 7s;
        }
        
        .fluid-shape:nth-child(5) {
            width: 300px;
            height: 300px;
            background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(0, 0, 0, 0.1));
            bottom: 20%;
            left: 15%;
            animation-duration: 18s;
            animation-delay: 12s;
        }
        
        @keyframes fluidMove {
            0%, 100% {
                transform: translate(0, 0) scale(1) rotate(0deg);
                border-radius: 50%;
            }
            25% {
                transform: translate(100px, -100px) scale(1.1) rotate(90deg);
                border-radius: 40% 60% 60% 40%;
            }
            50% {
                transform: translate(-100px, 100px) scale(0.9) rotate(180deg);
                border-radius: 60% 40% 40% 60%;
            }
            75% {
                transform: translate(50px, 50px) scale(1.05) rotate(270deg);
                border-radius: 40% 60% 60% 40%;
            }
        }
        
        /* Ultra Advanced Loader */
        .ultra-loader {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #ffffff, #f5f5f5);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            transition: opacity 0.8s ease-out, visibility 0.8s ease-out;
        }
        
        .ultra-loader.hidden {
            opacity: 0;
            visibility: hidden;
        }
        
        .ultra-loader-content {
            position: relative;
            width: 300px;
            height: 300px;
        }
        
        .loader-ring {
            position: absolute;
            width: 100%;
            height: 100%;
            border: 3px solid transparent;
            border-radius: 50%;
            animation: ringRotate 3s infinite linear;
        }
        
        .loader-ring:nth-child(1) {
            border-top-color: #000000;
            animation-duration: 3s;
        }
        
        .loader-ring:nth-child(2) {
            border-right-color: #333333;
            animation-duration: 4s;
            animation-direction: reverse;
        }
        
        .loader-ring:nth-child(3) {
            border-bottom-color: #666666;
            animation-duration: 5s;
        }
        
        .loader-ring:nth-child(4) {
            border-left-color: #999999;
            animation-duration: 6s;
            animation-direction: reverse;
        }
        
        .loader-core {
            position: absolute;
            top: 50%;
            left: 50%;
            width: 80px;
            height: 80px;
            background: linear-gradient(45deg, #000000, #ffffff);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            animation: corePulse 2s infinite ease-in-out;
        }
        
        .loader-particles {
            position: absolute;
            width: 100%;
            height: 100%;
        }
        
        .loader-particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: var(--text-primary);
            border-radius: 50%;
            animation: orbitParticle 4s infinite linear;
        }
        
        .loader-particle:nth-child(1) { animation-delay: 0s; }
        .loader-particle:nth-child(2) { animation-delay: 0.5s; }
        .loader-particle:nth-child(3) { animation-delay: 1s; }
        .loader-particle:nth-child(4) { animation-delay: 1.5s; }
        .loader-particle:nth-child(5) { animation-delay: 2s; }
        .loader-particle:nth-child(6) { animation-delay: 2.5s; }
        .loader-particle:nth-child(7) { animation-delay: 3s; }
        .loader-particle:nth-child(8) { animation-delay: 3.5s; }
        
        @keyframes ringRotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        @keyframes corePulse {
            0%, 100% { transform: translate(-50%, -50%) scale(1); }
            50% { transform: translate(-50%, -50%) scale(1.2); }
        }
        
        @keyframes orbitParticle {
            0% {
                transform: rotate(0deg) translateX(150px) rotate(0deg);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 1;
            }
            100% {
                transform: rotate(360deg) translateX(150px) rotate(-360deg);
                opacity: 0;
            }
        }
        
        .loader-text {
            margin-top: 2rem;
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--text-primary);
            animation: textPulse 1.5s infinite ease-in-out;
        }
        
        .loader-progress {
            margin-top: 1rem;
            width: 200px;
            height: 4px;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 2px;
            overflow: hidden;
        }
        
        .loader-progress-bar {
            height: 100%;
            background: var(--accent-gradient);
            border-radius: 2px;
            animation: progressLoad 2.5s ease-out forwards;
        }
        
        @keyframes progressLoad {
            0% { width: 0%; }
            100% { width: 100%; }
        }
        
        @keyframes textPulse {
            0%, 100% { opacity: 0.5; }
            50% { opacity: 1; }
        }
        
        /* Glass Panel Component */
        .glass-panel {
            backdrop-filter: blur(20px);
            background: var(--glass-bg);
            border: 1px solid var(--glass-border);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease, background 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .glass-panel::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
            z-index: -1;
        }
        
        .glass-panel::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transform: rotate(45deg);
            transition: all 0.5s ease;
            opacity: 0;
        }
        
        .glass-panel:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
            background: rgba(255, 255, 255, 0.15);
        }
        
        .glass-panel:hover::after {
            animation: shimmer 0.5s ease;
        }
        
        @keyframes shimmer {
            0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); opacity: 0; }
            50% { opacity: 1; }
            100% { transform: translateX(100%) translateY(100%) rotate(45deg); opacity: 0; }
        }
        
        .dark-glass-panel {
            backdrop-filter: blur(20px);
            background: var(--dark-glass-bg);
            border: 1px solid var(--dark-glass-border);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(255, 255, 255, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease, background 0.3s ease;
            position: relative;
            overflow: hidden;
            color: var(--text-light);
        }
        
        .dark-glass-panel::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));
            z-index: -1;
        }
        
        .dark-glass-panel::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transform: rotate(45deg);
            transition: all 0.5s ease;
            opacity: 0;
        }
        
        .dark-glass-panel:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(255, 255, 255, 0.15);
            background: rgba(0, 0, 0, 0.15);
        }
        
        .dark-glass-panel:hover::after {
            animation: shimmer 0.5s ease;
        }
        
        /* Scene for 3D Parallax */
        .scene {
            perspective: 1200px;
            position: relative;
        }
        
        /* Navigation */
        nav {
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            padding: 1rem 2rem;
            backdrop-filter: blur(20px);
            background: rgba(255, 255, 255, 0.1);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            transition: transform 0.3s ease, background 0.3s ease;
        }
        
        nav.scrolled {
            background: rgba(255, 255, 255, 0.2);
        }
        
        nav.hidden {
            transform: translateY(-100%);
        }
        
        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .nav-logo {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-primary);
            text-decoration: none;
            position: relative;
            overflow: hidden;
        }
        
        .nav-logo::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: var(--text-primary);
            transform: translateX(-100%);
            transition: transform 0.3s ease;
        }
        
        .nav-logo:hover::after {
            transform: translateX(0);
        }
        
        .nav-links {
            display: flex;
            gap: 2rem;
            list-style: none;
        }
        
        .nav-links li {
            position: relative;
            overflow: hidden;
        }
        
        .nav-links a {
            color: var(--text-primary);
            text-decoration: none;
            transition: color 0.3s ease;
            position: relative;
            font-weight: 500;
            display: inline-block;
        }
        
        .nav-links a::before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: var(--text-primary);
            transform: translateX(-100%);
            transition: transform 0.3s ease;
        }
        
        .nav-links a:hover {
            color: var(--text-secondary);
        }
        
        .nav-links a:hover::before {
            transform: translateX(0);
        }
        
        /* Container */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }
        
        /* Sections */
        section {
            padding: var(--section-padding);
            position: relative;
            opacity: 0;
            transform: translateY(30px);
            transition: opacity 0.8s ease, transform 0.8s ease;
        }
        
        section.visible {
            opacity: 1;
            transform: translateY(0);
        }
        
        /* Hero Section */
        #hero {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
        }
        
        .hero-content {
            text-align: center;
            z-index: 2;
            max-width: 800px;
        }
        
        .hero-title {
            font-size: clamp(2.5rem, 8vw, 5rem);
            font-weight: 700;
            margin-bottom: 1rem;
            background: linear-gradient(90deg, #000000, #ffffff, #000000);
            background-size: 200% auto;
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: gradientShift 5s ease infinite;
            font-family: 'Space Grotesk', sans-serif;
            position: relative;
            display: inline-block;
        }
        
        .hero-title span {
            display: inline-block;
            opacity: 0;
            transform: translateY(20px);
            animation: letterReveal 0.5s ease forwards;
        }
        
        @keyframes letterReveal {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        .hero-subtitle {
            font-size: 1.5rem;
            color: var(--text-secondary);
            margin-bottom: 2rem;
            font-weight: 300;
            opacity: 0;
            animation: fadeInUp 1s ease 0.5s forwards;
        }
        
        @keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .hero-cta {
            display: inline-block;
            padding: 1rem 2rem;
            background: var(--accent-gradient);
            color: var(--text-light);
            text-decoration: none;
            border-radius: 50px;
            font-weight: 600;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
            opacity: 0;
            animation: fadeInUp 1s ease 0.7s forwards;
        }
        
        .hero-cta:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }
        
        .hero-cta::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.3);
            transform: translate(-50%, -50%);
            transition: width 0.6s ease, height 0.6s ease;
        }
        
        .hero-cta:active::after {
            width: 300px;
            height: 300px;
        }
        
        /* Floating particles for hero */
        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: var(--text-primary);
            border-radius: 50%;
            opacity: 0.5;
            animation: float 20s infinite linear;
        }
        
        @keyframes float {
            0% {
                transform: translateY(100vh) translateX(0);
                opacity: 0;
            }
            10% {
                opacity: 0.5;
            }
            90% {
                opacity: 0.5;
            }
            100% {
                transform: translateY(-100vh) translateX(100px);
                opacity: 0;
            }
        }
        
        /* Morphing shapes */
        .morph-shape {
            position: absolute;
            width: 300px;
            height: 300px;
            border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
            background: linear-gradient(45deg, rgba(0, 0, 0, 0.1), rgba(255, 255, 255, 0.2));
            animation: morph 15s infinite ease-in-out;
        }
        
        .morph-shape:nth-child(1) {
            top: 10%;
            left: 10%;
            animation-duration: 20s;
        }
        
        .morph-shape:nth-child(2) {
            bottom: 10%;
            right: 10%;
            animation-duration: 25s;
            animation-delay: 5s;
        }
        
        @keyframes morph {
            0%, 100% {
                border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
                transform: rotate(0deg);
            }
            25% {
                border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
                transform: rotate(90deg);
            }
            50% {
                border-radius: 50% 60% 30% 60% / 30% 60% 70% 40%;
                transform: rotate(180deg);
            }
            75% {
                border-radius: 40% 60% 60% 40% / 70% 30% 40% 60%;
                transform: rotate(270deg);
            }
        }
        
        /* About Section */
        #about {
            padding-top: 8rem;
        }
        
        .about-content {
            display: grid;
            grid-template-columns: 1fr 2fr;
            gap: 3rem;
            align-items: center;
        }
        
        .about-image {
            position: relative;
            height: 400px;
            border-radius: 20px;
            overflow: hidden;
            background: linear-gradient(135deg, #000000, #ffffff);
            display: flex;
            align-items: center;
            justify-content: center;
            transform: rotate(-2deg);
            transition: transform 0.5s ease;
        }
        
        .about-image:hover {
            transform: rotate(0deg);
        }
        
        .about-image::before {
            content: 'JA';
            font-size: 6rem;
            font-weight: 700;
            color: rgba(255, 255, 255, 0.2);
            font-family: 'Space Grotesk', sans-serif;
            animation: pulse 3s infinite ease-in-out;
        }
        
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
        
        .about-text h2 {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            background: var(--accent-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            font-family: 'Space Grotesk', sans-serif;
            position: relative;
            display: inline-block;
        }
        
        .about-text h2::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 3px;
            background: var(--accent-gradient);
            transition: width 0.5s ease;
        }
        
        .about-text.visible h2::after {
            width: 100%;
        }
        
        .mission-statement {
            font-size: 1.2rem;
            color: var(--text-secondary);
            margin-bottom: 2rem;
            font-style: italic;
            opacity: 0;
            transform: translateX(-20px);
            animation: slideInLeft 0.8s ease 0.2s forwards;
        }
        
        @keyframes slideInLeft {
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }
        
        .tagline {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 1rem;
            font-family: 'Space Grotesk', sans-serif;
            opacity: 0;
            transform: translateX(-20px);
            animation: slideInLeft 0.8s ease 0.4s forwards;
        }
        
        .about-text p {
            opacity: 0;
            transform: translateX(-20px);
            animation: slideInLeft 0.8s ease 0.6s forwards;
        }
        
        /* Research Section */
        #research {
            background: linear-gradient(135deg, rgba(0, 0, 0, 0.05), rgba(255, 255, 255, 0.1));
        }
        
        .research-content {
            text-align: center;
        }
        
        .research-title {
            font-size: 2.5rem;
            margin-bottom: 2rem;
            background: var(--accent-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            font-family: 'Space Grotesk', sans-serif;
            position: relative;
            display: inline-block;
        }
        
        .research-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 3px;
            background: var(--accent-gradient);
            transition: width 0.5s ease;
        }
        
        .research-content.visible .research-title::after {
            width: 100%;
        }
        
        .equation {
            font-size: 1.5rem;
            margin: 2rem 0;
            opacity: 0;
            transform: scale(0.9);
            transition: opacity 0.8s ease, transform 0.8s ease;
            font-family: 'Space Grotesk', sans-serif;
            font-weight: 500;
            position: relative;
            display: inline-block;
        }
        
        .equation::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.05);
            border-radius: 10px;
            transform: translate(-50%, -50%) scale(0);
            transition: transform 0.5s ease;
            z-index: -1;
        }
        
        .equation.visible {
            opacity: 1;
            transform: scale(1);
        }
        
        .equation.visible::before {
            transform: translate(-50%, -50%) scale(1.2);
        }
        
        .chronon-dots {
            position: relative;
            height: 200px;
            margin: 3rem 0;
        }
        
        .chronon-dot {
            position: absolute;
            width: 10px;
            height: 10px;
            background: var(--text-primary);
            border-radius: 50%;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
        }
        
        .chronon-dot::before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background: var(--text-primary);
            border-radius: 50%;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 1;
            }
            100% {
                transform: scale(3);
                opacity: 0;
            }
        }
        
        /* HOPE Ecosystem Section */
        #hope {
            padding: 5rem 0;
        }
        
        .hope-title {
            font-size: 2.5rem;
            text-align: center;
            margin-bottom: 3rem;
            background: var(--accent-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            font-family: 'Space Grotesk', sans-serif;
            position: relative;
            display: inline-block;
        }
        
        .hope-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 3px;
            background: var(--accent-gradient);
            transition: width 0.5s ease;
        }
        
        .hope-content.visible .hope-title::after {
            width: 100%;
        }
        
        .hope-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
        }
        
        .hope-card {
            background: var(--glass-bg);
            backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border);
            border-radius: 20px;
            padding: 2rem;
            text-align: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            transform-style: preserve-3d;
            cursor: pointer;
            position: relative;
            overflow: hidden;
            opacity: 0;
            transform: translateY(20px);
        }
        
        .hope-content.visible .hope-card {
            opacity: 1;
            transform: translateY(0);
        }
        
        .hope-content.visible .hope-card:nth-child(1) { transition-delay: 0.1s; }
        .hope-content.visible .hope-card:nth-child(2) { transition-delay: 0.2s; }
        .hope-content.visible .hope-card:nth-child(3) { transition-delay: 0.3s; }
        .hope-content.visible .hope-card:nth-child(4) { transition-delay: 0.4s; }
        
        .hope-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
            z-index: -1;
            transition: opacity 0.3s ease;
        }
        
        .hope-card:hover::before {
            opacity: 0.5;
        }
        
        .hope-card:hover {
            transform: translateY(-10px) rotateX(5deg);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }
        
        .hope-icon {
            width: 60px;
            height: 60px;
            margin: 0 auto 1rem;
            background: var(--accent-gradient);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: var(--text-light);
            transition: transform 0.3s ease;
        }
        
        .hope-card:hover .hope-icon {
            transform: scale(1.1) rotate(5deg);
        }
        
        .hope-card h3 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: var(--text-primary);
            font-family: 'Space Grotesk', sans-serif;
            transition: transform 0.3s ease;
        }
        
        .hope-card:hover h3 {
            transform: translateY(-3px);
        }
        
        .hope-card p {
            color: var(--text-secondary);
            transition: transform 0.3s ease;
        }
        
        .hope-card:hover p {
            transform: translateY(-3px);
        }
        
        /* Skills Section */
        #skills {
            background: linear-gradient(135deg, rgba(0, 0, 0, 0.05), rgba(255, 255, 255, 0.1));
        }
        
        .skills-title {
            font-size: 2.5rem;
            text-align: center;
            margin-bottom: 3rem;
            background: var(--accent-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            font-family: 'Space Grotesk', sans-serif;
            position: relative;
            display: inline-block;
        }
        
        .skills-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 3px;
            background: var(--accent-gradient);
            transition: width 0.5s ease;
        }
        
        .skills-content.visible .skills-title::after {
            width: 100%;
        }
        
        .skills-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 1rem;
        }
        
        .skill-bubble {
            background: var(--glass-bg);
            backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border);
            border-radius: 50px;
            padding: 0.8rem 1.5rem;
            font-size: 0.9rem;
            color: var(--text-primary);
            transform: scale(0);
            transition: transform 0.5s ease;
            position: relative;
            overflow: hidden;
        }
        
        .skill-bubble::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));
            z-index: -1;
        }
        
        .skill-bubble.visible {
            transform: scale(1);
        }
        
        .skill-bubble:hover {
            transform: scale(1.1);
            background: rgba(255, 255, 255, 0.2);
        }
        
        /* Projects Section */
        #projects {
            padding: 5rem 0;
        }
        
        .projects-title {
            font-size: 2.5rem;
            text-align: center;
            margin-bottom: 3rem;
            background: var(--accent-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            font-family: 'Space Grotesk', sans-serif;
            position: relative;
            display: inline-block;
        }
        
        .projects-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 3px;
            background: var(--accent-gradient);
            transition: width 0.5s ease;
        }
        
        .projects-content.visible .projects-title::after {
            width: 100%;
        }
        
        .projects-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }
        
        .project-card {
            background: var(--glass-bg);
            backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border);
            border-radius: 20px;
            padding: 2rem;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
            opacity: 0;
            transform: translateY(20px);
        }
        
        .projects-content.visible .project-card {
            opacity: 1;
            transform: translateY(0);
        }
        
        .projects-content.visible .project-card:nth-child(1) { transition-delay: 0.1s; }
        .projects-content.visible .project-card:nth-child(2) { transition-delay: 0.2s; }
        .projects-content.visible .project-card:nth-child(3) { transition-delay: 0.3s; }
        .projects-content.visible .project-card:nth-child(4) { transition-delay: 0.4s; }
        
        .project-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
            z-index: -1;
        }
        
        .project-card:hover {
            transform: translateY(-5px) rotateX(5deg);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        }
        
        .project-card h3 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: var(--text-primary);
            font-family: 'Space Grotesk', sans-serif;
            transition: transform 0.3s ease;
        }
        
        .project-card:hover h3 {
            transform: translateY(-3px);
        }
        
        .project-card p {
            color: var(--text-secondary);
            margin-bottom: 1rem;
            transition: transform 0.3s ease;
        }
        
        .project-card:hover p {
            transform: translateY(-3px);
        }
        
        .project-tech {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }
        
        .tech-tag {
            background: rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(0, 0, 0, 0.2);
            border-radius: 20px;
            padding: 0.3rem 0.8rem;
            font-size: 0.8rem;
            color: var(--text-primary);
            transition: transform 0.3s ease, background 0.3s ease;
        }
        
        .tech-tag:hover {
            transform: scale(1.05);
            background: rgba(0, 0, 0, 0.2);
        }
        
        /* Contact Section */
        #contact {
            background: linear-gradient(135deg, rgba(0, 0, 0, 0.05), rgba(255, 255, 255, 0.1));
            text-align: center;
        }
        
        .contact-title {
            font-size: 2.5rem;
            margin-bottom: 2rem;
            background: var(--accent-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            font-family: 'Space Grotesk', sans-serif;
            position: relative;
            display: inline-block;
        }
        
        .contact-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 3px;
            background: var(--accent-gradient);
            transition: width 0.5s ease;
        }
        
        .contact-content.visible .contact-title::after {
            width: 100%;
        }
        
        .contact-content {
            max-width: 600px;
            margin: 0 auto;
        }
        
        .contact-text {
            font-size: 1.2rem;
            color: var(--text-secondary);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInUp 0.8s ease 0.2s forwards;
        }
        
        .contact-button {
            display: inline-block;
            padding: 1rem 2rem;
            background: var(--accent-gradient);
            color: var(--text-light);
            text-decoration: none;
            border-radius: 50px;
            font-weight: 600;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInUp 0.8s ease 0.4s forwards;
        }
        
        .contact-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }
        
        .contact-button::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.3);
            transform: translate(-50%, -50%);
            transition: width 0.6s ease, height 0.6s ease;
        }
        
        .contact-button:active::after {
            width: 300px;
            height: 300px;
        }
        
        /* Footer */
        footer {
            padding: 2rem 0;
            text-align: center;
            border-top: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .footer-content {
            color: var(--text-secondary);
        }
        
        .social-links {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-top: 1rem;
        }
        
        .social-link {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: var(--glass-bg);
            border: 1px solid var(--glass-border);
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-primary);
            text-decoration: none;
            transition: transform 0.3s ease, background 0.3s ease;
        }
        
        .social-link:hover {
            transform: translateY(-3px) rotate(5deg);
            background: var(--accent-gradient);
            color: var(--text-light);
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }
            
            .about-content {
                grid-template-columns: 1fr;
            }
            
            .hero-title {
                font-size: 2.5rem;
            }
            
            .hope-grid {
                grid-template-columns: 1fr;
            }
            
            .projects-grid {
                grid-template-columns: 1fr;
            }
            
            .cursor, .cursor-follower {
                display: none;
            }
            
            body {
                cursor: auto;
            }
        }
        
        /* Reduced Motion */
        @media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }
    </style>
</head>
<body>
    <!-- Custom Cursor -->
    <div class="cursor"></div>
    <div class="cursor-follower"></div>
    
    <!-- Fluid Background -->
    <div class="fluid-bg">
        <div class="fluid-shape"></div>
        <div class="fluid-shape"></div>
        <div class="fluid-shape"></div>
        <div class="fluid-shape"></div>
        <div class="fluid-shape"></div>
    </div>
    
    <!-- Advanced Loader -->
    <div class="ultra-loader" id="loader">
        <div class="ultra-loader-content">
            <div class="loader-ring"></div>
            <div class="loader-ring"></div>
            <div class="loader-ring"></div>
            <div class="loader-ring"></div>
            <div class="loader-core"></div>
            <div class="loader-particles">
                <div class="loader-particle"></div>
                <div class="loader-particle"></div>
                <div class="loader-particle"></div>
                <div class="loader-particle"></div>
                <div class="loader-particle"></div>
                <div class="loader-particle"></div>
                <div class="loader-particle"></div>
                <div class="loader-particle"></div>
            </div>
        </div>
        <div class="loader-text">Initializing Quantum Experience...</div>
        <div class="loader-progress">
            <div class="loader-progress-bar"></div>
        </div>
    </div>
    
    <!-- Navigation -->
    <nav id="navbar">
        <div class="nav-container">
            <a href="#hero" class="nav-logo">JA</a>
            <ul class="nav-links">
                <li><a href="#about">About</a></li>
                <li><a href="#research">Research</a></li>
                <li><a href="#hope">HOPE</a></li>
                <li><a href="#skills">Skills</a></li>
                <li><a href="#projects">Projects</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
        </div>
    </nav>
    
    <!-- Hero Section -->
    <section id="hero" class="scene">
        <div class="morph-shape"></div>
        <div class="morph-shape"></div>
        <div class="hero-content">
            <h1 class="hero-title">
                <span style="animation-delay: 0.1s">J</span>
                <span style="animation-delay: 0.2s">u</span>
                <span style="animation-delay: 0.3s">s</span>
                <span style="animation-delay: 0.4s">t</span>
                <span style="animation-delay: 0.5s">i</span>
                <span style="animation-delay: 0.6s">n</span>
                <span style="animation-delay: 0.7s"> </span>
                <span style="animation-delay: 0.8s">A</span>
                <span style="animation-delay: 0.9s">l</span>
                <span style="animation-delay: 1.0s">e</span>
                <span style="animation-delay: 1.1s">x</span>
                <span style="animation-delay: 1.2s">i</span>
                <span style="animation-delay: 1.3s">a</span>
            </h1>
            <p class="hero-subtitle">Quantum Developer & Researcher</p>
            <a href="#about" class="hero-cta">Explore My Universe</a>
        </div>
        <!-- Floating Particles -->
        <div class="particle" style="left: 10%; animation-delay: 0s;"></div>
        <div class="particle" style="left: 20%; animation-delay: 2s;"></div>
        <div class="particle" style="left: 30%; animation-delay: 4s;"></div>
        <div class="particle" style="left: 40%; animation-delay: 6s;"></div>
        <div class="particle" style="left: 50%; animation-delay: 8s;"></div>
        <div class="particle" style="left: 60%; animation-delay: 10s;"></div>
        <div class="particle" style="left: 70%; animation-delay: 12s;"></div>
        <div class="particle" style="left: 80%; animation-delay: 14s;"></div>
        <div class="particle" style="left: 90%; animation-delay: 16s;"></div>
    </section>
    
    <!-- About Section -->
    <section id="about">
        <div class="container">
            <div class="about-content">
                <div class="about-image glass-panel" data-depth="0.2"></div>
                <div class="about-text">
                    <h2>About Me</h2>
                    <p class="mission-statement">Pioneering the intersection of quantum computing and practical software solutions to transform how we interact with technology.</p>
                    <p class="tagline">Create. Empower. Evolve.</p>
                    <p>I'm a passionate developer and researcher exploring the frontiers of quantum computing, discrete spacetime, and their applications in real-world software systems. With expertise spanning multiple programming languages and domains, I bridge the gap between theoretical physics and practical implementation.</p>
                </div>
            </div>
        </div>
    </section>
    
    <!-- Research Section -->
    <section id="research">
        <div class="container">
            <div class="research-content">
                <h2 class="research-title">Chronon-SQL Research</h2>
                <p>Exploring the fundamental relationship between discrete spacetime and database structures through the Chronon-Super Quantum Level Model.</p>
                
                <div class="equation">
                    <p>Chronon → Space Grain → SQL</p>
                </div>
                
                <div class="chronon-dots">
                    <div class="chronon-dot" style="top: 20%; left: 20%; animation-delay: 0s;"></div>
                    <div class="chronon-dot" style="top: 50%; left: 50%; animation-delay: 1s;"></div>
                    <div class="chronon-dot" style="top: 80%; left: 80%; animation-delay: 2s;"></div>
                    <div class="chronon-dot" style="top: 30%; left: 70%; animation-delay: 3s;"></div>
                    <div class="chronon-dot" style="top: 70%; left: 30%; animation-delay: 4s;"></div>
                </div>
                
                <p>My research focuses on quantum gravity, discrete spacetime, the problem of time, and Hilbert spaces, seeking to unlock new paradigms in data storage and retrieval.</p>
            </div>
        </div>
    </section>
    
    <!-- HOPE Ecosystem Section -->
    <section id="hope">
        <div class="container">
            <div class="hope-content">
                <h2 class="hope-title">HOPE Ecosystem</h2>
                <div class="hope-grid">
                    <div class="hope-card" data-tilt>
                        <div class="hope-icon">📚</div>
                        <h3>Education</h3>
                        <p>Revolutionary learning platforms integrating quantum concepts for enhanced educational experiences.</p>
                    </div>
                    <div class="hope-card" data-tilt>
                        <div class="hope-icon">🛒</div>
                        <h3>E-Commerce</h3>
                        <p>Next-generation shopping experiences powered by quantum-optimized recommendation systems.</p>
                    </div>
                    <div class="hope-card" data-tilt>
                        <div class="hope-icon">🌐</div>
                        <h3>IoT</h3>
                        <p>Connected ecosystems leveraging quantum principles for unprecedented efficiency and security.</p>
                    </div>
                    <div class="hope-card" data-tilt>
                        <div class="hope-icon">🔬</div>
                        <h3>Research</h3>
                        <p>Cutting-edge tools and platforms advancing quantum computing and discrete spacetime research.</p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <!-- Skills Section -->
    <section id="skills">
        <div class="container">
            <div class="skills-content">
                <h2 class="skills-title">Core Skills</h2>
                <div class="skills-container">
                    <div class="skill-bubble">Python</div>
                    <div class="skill-bubble">Java</div>
                    <div class="skill-bubble">JavaScript</div>
                    <div class="skill-bubble">C/C++</div>
                    <div class="skill-bubble">SQL</div>
                    <div class="skill-bubble">Firebase</div>
                    <div class="skill-bubble">Pen Testing</div>
                    <div class="skill-bubble">IoT (Arduino/ESP32)</div>
                    <div class="skill-bubble">Machine Learning</div>
                    <div class="skill-bubble">Quantum Computing</div>
                    <div class="skill-bubble">React</div>
                    <div class="skill-bubble">Node.js</div>
                    <div class="skill-bubble">TensorFlow</div>
                    <div class="skill-bubble">Docker</div>
                    <div class="skill-bubble">AWS</div>
                    <div class="skill-bubble">MongoDB</div>
                    <div class="skill-bubble">PostgreSQL</div>
                    <div class="skill-bubble">GraphQL</div>
                    <div class="skill-bubble">Kubernetes</div>
                    <div class="skill-bubble">Blockchain</div>
                </div>
            </div>
        </div>
    </section>
    
    <!-- Projects Section -->
    <section id="projects">
        <div class="container">
            <div class="projects-content">
                <h2 class="projects-title">Featured Projects</h2>
                <div class="projects-grid">
                    <div class="project-card">
                        <h3>TexidoMeg</h3>
                        <p>Advanced text processing platform leveraging quantum-inspired algorithms for natural language understanding and generation.</p>
                        <div class="project-tech">
                            <span class="tech-tag">Python</span>
                            <span class="tech-tag">NLP</span>
                            <span class="tech-tag">TensorFlow</span>
                            <span class="tech-tag">React</span>
                        </div>
                    </div>
                    <div class="project-card">
                        <h3>ShopRoyince</h3>
                        <p>E-commerce platform with quantum-optimized recommendation engine and real-time inventory management.</p>
                        <div class="project-tech">
                            <span class="tech-tag">Node.js</span>
                            <span class="tech-tag">MongoDB</span>
                            <span class="tech-tag">React</span>
                            <span class="tech-tag">AWS</span>
                        </div>
                    </div>
                    <div class="project-card">
                        <h3>IES DS Portal</h3>
                        <p>Comprehensive data science portal for educational institutions with integrated ML pipelines and analytics.</p>
                        <div class="project-tech">
                            <span class="tech-tag">Python</span>
                            <span class="tech-tag">Django</span>
                            <span class="tech-tag">PostgreSQL</span>
                            <span class="tech-tag">Docker</span>
                        </div>
                    </div>
                    <div class="project-card">
                        <h3>Candle Institute GUI</h3>
                        <p>Specialized graphical interface for quantum physics simulations and educational visualization tools.</p>
                        <div class="project-tech">
                            <span class="tech-tag">Java</span>
                            <span class="tech-tag">JavaFX</span>
                            <span class="tech-tag">OpenGL</span>
                            <span class="tech-tag">C++</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <!-- Contact Section -->
    <section id="contact">
        <div class="container">
            <div class="contact-content">
                <h2 class="contact-title">Let's Connect</h2>
                <p class="contact-text">Interested in collaborating on quantum computing projects, research opportunities, or custom software solutions? Let's explore the possibilities together.</p>
                <a href="mailto:justinalexia@example.com" class="contact-button">Get In Touch</a>
            </div>
        </div>
    </section>
    
    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="footer-content">
                <p>&copy; 2023 Justin Alexia. Quantum-Powered Development.</p>
                <div class="social-links">
                    <a href="#" class="social-link">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                    </a>
                    <a href="#" class="social-link">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                        </svg>
                    </a>
                    <a href="#" class="social-link">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                        </svg>
                    </a>
                </div>
            </div>
        </div>
    </footer>
    
    <script>
        // Custom Cursor
        const cursor = document.querySelector('.cursor');
        const cursorFollower = document.querySelector('.cursor-follower');
        
        document.addEventListener('mousemove', (e) => {
            cursor.style.left = e.clientX + 'px';
            cursor.style.top = e.clientY + 'px';
            
            setTimeout(() => {
                cursorFollower.style.left = e.clientX + 'px';
                cursorFollower.style.top = e.clientY + 'px';
            }, 100);
        });
        
        // Add hover effect to cursor
        const hoverElements = document.querySelectorAll('a, button, .hope-card, .project-card, .skill-bubble');
        hoverElements.forEach(element => {
            element.addEventListener('mouseenter', () => {
                cursor.classList.add('hover');
            });
            element.addEventListener('mouseleave', () => {
                cursor.classList.remove('hover');
            });
        });
        
        // Advanced Loader
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(() => {
                document.getElementById('loader').classList.add('hidden');
            }, 2500);
        });
        
        // Intersection Observer for scroll animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                    
                    // Special handling for skill bubbles
                    if (entry.target.classList.contains('skill-bubble')) {
                        const delay = Array.from(entry.target.parentNode.children).indexOf(entry.target) * 50;
                        setTimeout(() => {
                            entry.target.classList.add('visible');
                        }, delay);
                    }
                    
                    // Special handling for equations
                    if (entry.target.classList.contains('equation')) {
                        setTimeout(() => {
                            entry.target.classList.add('visible');
                        }, 200);
                    }
                }
            });
        }, observerOptions);
        
        // Observe all sections
        document.querySelectorAll('section').forEach(section => {
            observer.observe(section);
        });
        
        // Observe content containers
        document.querySelectorAll('.about-text, .research-content, .hope-content, .skills-content, .projects-content, .contact-content').forEach(container => {
            observer.observe(container);
        });
        
        // Observe skill bubbles
        document.querySelectorAll('.skill-bubble').forEach(bubble => {
            observer.observe(bubble);
        });
        
        // Observe equations
        document.querySelectorAll('.equation').forEach(equation => {
            observer.observe(equation);
        });
        
        // Parallax effect for hero section
        window.addEventListener('scroll', () => {
            const scrolled = window.pageYOffset;
            const parallaxElements = document.querySelectorAll('[data-depth]');
            
            parallaxElements.forEach(element => {
                const depth = parseFloat(element.getAttribute('data-depth'));
                const yPos = -(scrolled * depth);
                element.style.transform = `translateY(${yPos}px)`;
            });
        });
        
        // Hide/show navbar on scroll
        let lastScrollTop = 0;
        const navbar = document.getElementById('navbar');
        
        window.addEventListener('scroll', () => {
            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
            
            if (scrollTop > lastScrollTop && scrollTop > 100) {
                navbar.classList.add('hidden');
            } else {
                navbar.classList.remove('hidden');
            }
            
            // Add scrolled class for navbar background change
            if (scrollTop > 50) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
            
            lastScrollTop = scrollTop;
        });
        
        // 3D tilt effect for HOPE cards
        document.querySelectorAll('[data-tilt]').forEach(card => {
            card.addEventListener('mousemove', (e) => {
                const rect = card.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                
                const centerX = rect.width / 2;
                const centerY = rect.height / 2;
                
                const rotateX = (y - centerY) / 10;
                const rotateY = (centerX - x) / 10;
                
                card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateZ(10px)`;
            });
            
            card.addEventListener('mouseleave', () => {
                card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) translateZ(0)';
            });
        });
        
        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function(e) {
                e.preventDefault();
                
                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                
                if (targetElement) {
                    window.scrollTo({
                        top: targetElement.offsetTop - 80,
                        behavior: 'smooth'
                    });
                }
            });
        });
        
        // Throttle function for performance
        function throttle(func, limit) {
            let inThrottle;
            return function() {
                const args = arguments;
                const context = this;
                if (!inThrottle) {
                    func.apply(context, args);
                    inThrottle = true;
                    setTimeout(() => inThrottle = false, limit);
                }
            };
        }
        
        // Apply throttle to scroll events
        window.addEventListener('scroll', throttle(() => {
            // Scroll-based animations here
        }, 100));
        
        // Check for reduced motion preference
        const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');
        
        if (prefersReducedMotion.matches) {
            // Disable non-essential animations
            document.querySelectorAll('*').forEach(el => {
                el.style.animation = 'none';
                el.style.transition = 'none';
            });
        }
        
        // Performance optimization: Lazy load non-critical JavaScript
        function loadNonCriticalJS() {
            // Any non-critical JavaScript can be loaded here
        }
        
        // Load non-critical JS after initial page load
        window.addEventListener('load', () => {
            setTimeout(loadNonCriticalJS, 1000);
        });
        
        // Advanced mouse tracking effect
        document.addEventListener('mousemove', (e) => {
            const mouseX = e.clientX;
            const mouseY = e.clientY;
            
            // Update fluid shapes based on mouse position
            const fluidShapes = document.querySelectorAll('.fluid-shape');
            fluidShapes.forEach((shape, index) => {
                const speed = (index + 1) * 0.01;
                const x = (window.innerWidth - mouseX * speed) / 100;
                const y = (window.innerHeight - mouseY * speed) / 100;
                
                shape.style.transform = `translate(${x}px, ${y}px)`;
            });
        });
        
        // Add ripple effect to buttons
        document.querySelectorAll('.hero-cta, .contact-button').forEach(button => {
            button.addEventListener('click', function(e) {
                const ripple = document.createElement('span');
                const rect = this.getBoundingClientRect();
                const size = Math.max(rect.width, rect.height);
                const x = e.clientX - rect.left - size / 2;
                const y = e.clientY - rect.top - size / 2;
                
                ripple.style.width = ripple.style.height = size + 'px';
                ripple.style.left = x + 'px';
                ripple.style.top = y + 'px';
                ripple.classList.add('ripple');
                
                this.appendChild(ripple);
                
                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });
        
        // Add typewriter effect to hero title
        const heroTitle = document.querySelector('.hero-title');
        const heroTitleText = heroTitle.textContent;
        heroTitle.textContent = '';
        
        function typeWriter() {
            let i = 0;
            const speed = 100;
            
            function type() {
                if (i < heroTitleText.length) {
                    heroTitle.textContent += heroTitleText.charAt(i);
                    i++;
                    setTimeout(type, speed);
                }
            }
            
            type();
        }
        
        // Start typewriter effect after loader disappears
        setTimeout(typeWriter, 1600);
        
        // Add glitch effect to titles on hover
        document.querySelectorAll('h2').forEach(title => {
            title.addEventListener('mouseenter', function() {
                this.style.animation = 'glitch 0.3s ease';
            });
            
            title.addEventListener('animationend', function() {
                this.style.animation = '';
            });
        });
        
        // Add CSS for glitch effect
        const style = document.createElement('style');
        style.textContent = `
            @keyframes glitch {
                0% { transform: translate(0); }
                20% { transform: translate(-2px, 2px); }
                40% { transform: translate(-2px, -2px); }
                60% { transform: translate(2px, 2px); }
                80% { transform: translate(2px, -2px); }
                100% { transform: translate(0); }
            }
        `;
        document.head.appendChild(style);

        // Friendly Loader Text Animation
document.addEventListener('DOMContentLoaded', function() {
    const loaderText = document.querySelector('.loader-text');
    
    // Array of friendly, conversational messages
    const friendlyMessages = [
        "Hey, how's it going? Getting things ready...",
        "Just a moment, preparing your experience...",
        "Almost there, thanks for your patience...",
        "Hey! Setting up something amazing for you...",
        "How are you doing? Just loading up...",
        "Thanks for waiting! Nearly ready...",
        "Hey there! Getting everything in place...",
        "Just a sec, making it perfect for you..."
    ];
    
    let currentMessageIndex = 0;
    
    // Function to update loader text with fade effect
    function updateLoaderText() {
        // Fade out
        loaderText.style.opacity = '0';
        loaderText.style.transition = 'opacity 0.5s ease-in-out';
        
        setTimeout(() => {
            // Update text
            loaderText.textContent = friendlyMessages[currentMessageIndex];
            
            // Fade in
            loaderText.style.opacity = '1';
            
            // Move to next message
            currentMessageIndex = (currentMessageIndex + 1) % friendlyMessages.length;
        }, 500);
    }
    
    // Start the animation
    updateLoaderText();
    
    // Change message every 3 seconds
    setInterval(updateLoaderText, 3000);
    
    // Add a subtle typewriter effect to the first message
    function typeWriterEffect(element, text, speed = 50) {
        element.textContent = '';
        let i = 0;
        
        function type() {
            if (i < text.length) {
                element.textContent += text.charAt(i);
                i++;
                setTimeout(type, speed);
            }
        }
        
        type();
    }
    
    // Apply typewriter effect to initial message
    setTimeout(() => {
        typeWriterEffect(loaderText, friendlyMessages[0]);
    }, 500);
});

// Enhanced loader interactions
document.addEventListener('DOMContentLoaded', function() {
    const loader = document.getElementById('loader');
    const loaderText = document.querySelector('.loader-text');
    
    // Add hover effect for extra friendliness
    loader.addEventListener('mouseenter', function() {
        const hoverMessages = [
            "Thanks for hanging out! 😊",
            "You're awesome for waiting! ⭐",
            "Great things coming your way! 🚀",
            "Almost ready, promise! ✨"
        ];
        
        const randomMessage = hoverMessages[Math.floor(Math.random() * hoverMessages.length)];
        const originalText = loaderText.textContent;
        
        loaderText.textContent = randomMessage;
        loaderText.style.transform = 'scale(1.1)';
        loaderText.style.transition = 'all 0.3s ease';
        
        setTimeout(() => {
            loaderText.textContent = originalText;
            loaderText.style.transform = 'scale(1)';
        }, 2000);
    });
    
    // Add click interaction for fun
    loader.addEventListener('click', function() {
        const clickMessages = [
            "Clicked! Loading even faster now! ⚡",
            "Nice click! Speeding things up! 🎯",
            "You clicked! Magic happening! ✨",
            "Click detected! Boosting load speed! 🚀"
        ];
        
        const randomMessage = clickMessages[Math.floor(Math.random() * clickMessages.length)];
        loaderText.textContent = randomMessage;
        loaderText.style.color = '#4CAF50';
        
        setTimeout(() => {
            loaderText.style.color = '';
        }, 1500);
    });
});

// Add some fun CSS transitions via JavaScript
document.addEventListener('DOMContentLoaded', function() {
    const style = document.createElement('style');
    style.textContent = `
        .loader-text {
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            transform-origin: center;
        }
        
        .loader-text:hover {
            transform: scale(1.05);
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }
        
        .loader-text.pulse {
            animation: pulse 2s infinite;
        }
    `;
    document.head.appendChild(style);
    
    // Add pulse effect periodically
    const loaderText = document.querySelector('.loader-text');
    setInterval(() => {
        loaderText.classList.add('pulse');
        setTimeout(() => {
            loaderText.classList.remove('pulse');
        }, 2000);
    }, 8000);
});
    </script>
</body>
</html>